# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models
from django.contrib.auth.models import User
from django.contrib.auth.models import AbstractUser
# Create your models here.
# 
# from django.utils.encoding import python_2_unicode_compatible

# @python_2_unicode_compatible
class User(models.Model):    
    user_login = models.CharField('user_login', default='',max_length=256,blank=True)
    user_name = models.CharField('用户名', default='',max_length=256,blank=True)
    comment = models.CharField('备注名',default='',max_length=256)
    user_pwd  = models.CharField('密码', default='2891baceeef1652ee698294da0e71ba78a2a4064',max_length=256,blank=True)
    user_time = models.CharField('创建时间', default='',max_length=256,blank=True)
    user_company = models.CharField('所属公司', default='',max_length=256,blank=True)
    user_icon = models.FileField('用户头像',upload_to = './Images/user/jdface/',blank=True)
    user_permission = models.CharField('user_permission', default='',max_length=256,blank=True)
    user_telphone = models.CharField('联系电话', default='',max_length=256,blank=True)
    user_style = models.CharField('user_style', default='',max_length=256,blank=True)
    user_author = models.CharField('用户权限',default='3',max_length=20,blank=True)
    user_language = models.CharField('语言',default='中文简体',max_length=20,blank=True)

    def __unicode__(self):
        return self.user_name
    class Meta:
        verbose_name = '用户'
        verbose_name_plural = '用户表'
        ordering=['id']

class BoardConfig(models.Model):
    board_flag = models.CharField('board_flag', default='',max_length=256)
    board_name = models.CharField('board_name', default='',max_length=256)
    board_img1 = models.FileField('板型正面图',upload_to='./Images/board/',blank=True)
    board_img2 = models.FileField('板型背面图',upload_to='./Images/board/',blank=True)

    def __unicode__(self):
        return self.board_name

    class Meta:
        verbose_name = '板型'
        verbose_name_plural = '板型配置'

class LanguageConfig(models.Model):
    language_flag = models.CharField('language_flag', default='',max_length=256)
    language_name = models.CharField('语言名', default='',max_length=256)
    def __unicode__(self):
        return self.language_name#self.language_name
    class Meta:
        verbose_name = '语言'
        verbose_name_plural = '语言配置'

class SystemConfig(models.Model):
    system_flag = models.CharField('system_flag', default='',max_length=256)
    system_name = models.CharField('system_name', default='',max_length=256)

    def __unicode__(self):
        return self.system_name
    class Meta:
        verbose_name = '制式'
        verbose_name_plural = '制式配置'

class ProjectConfig(models.Model):

    project_name = models.CharField('project_name', default='',max_length=256)
    project_flag = models.CharField('project_flag', default='',max_length=256)

    def __unicode__(self):
        return self.project_name
    class Meta:
        verbose_name = '类型'
        verbose_name_plural = '类型配置'

class power(models.Model):
    power_on_mode = models.CharField('power_on_mode', default='',max_length=256)
    def __unicode__(self):
        return self.power_on_mode
    class Meta:
        verbose_name = '上电模式'
        verbose_name_plural = '上电配置'

class logo(models.Model):
    Author = models.ForeignKey(User)
    LOGOTime   = models.CharField('创建时间',default='',max_length=256)
    logo_name = models.CharField('LOGO名称', default='',max_length=256,blank=True)
    logo_src = models.FileField('LOGO路径',max_length=256, upload_to = './logo/default/')

    def __unicode__(self):
        return str(self.id)
    class Meta:
        verbose_name = 'LOGO'
        verbose_name_plural = 'LOGO配置'

class ProRemote1(models.Model):
    remote_name = models.CharField('主遥控名称', default='',max_length=256,blank=True)
    remote_head_code = models.CharField('主遥控头码', default='',max_length=10,blank=True)
    remote_header_code_time = models.CharField('主遥控头码时间', default='9000',max_length=10,blank=True)
    remote_power = models.CharField('主遥控power', default='',max_length=10,blank=True)
    remote_mute = models.CharField('主遥控mute', default='',max_length=10,blank=True)
    remote_num_1 = models.CharField('主遥控num1', default='',max_length=10,blank=True)
    remote_num_2 = models.CharField('主遥控num2', default='',max_length=10,blank=True)
    remote_num_3 = models.CharField('主遥控num3', default='',max_length=10,blank=True)
    remote_num_4 = models.CharField('主遥控num4', default='',max_length=10,blank=True)
    remote_num_5 = models.CharField('主遥控num5', default='',max_length=10,blank=True)
    remote_num_6 = models.CharField('主遥控num6', default='',max_length=10,blank=True)
    remote_num_7 = models.CharField('主遥控num7', default='',max_length=10,blank=True)
    remote_num_8 = models.CharField('主遥控num8', default='',max_length=10,blank=True)
    remote_num_9 = models.CharField('主遥控num9 ', default='',max_length=10,blank=True)
    remote_num_0 = models.CharField('主遥控num0', default='',max_length=10,blank=True)
    remote_dash = models.CharField('主遥控dash', default='',max_length=10,blank=True)
    remote_channel_return = models.CharField('主遥控return', default='',max_length=10,blank=True)
    remote_sleep = models.CharField('主遥控sleep', default='',max_length=10,blank=True)
    remote_pc = models.CharField('主遥控vga', default='',max_length=10,blank=True)
    remote_hdmi = models.CharField('主遥控hdmi', default='',max_length=10,blank=True)
    remote_volume_plus = models.CharField('主遥控vol_plus', default='',max_length=10,blank=True)
    remote_volume_minus = models.CharField('主遥控vol_minus', default='',max_length=10,blank=True)
    remote_channel_plus = models.CharField('主遥控chl_plus', default='',max_length=10,blank=True)
    remote_channel_minus = models.CharField('主遥控chl_minus', default='',max_length=10,blank=True)
    remote_input_source = models.CharField('主遥控source', default='',max_length=10,blank=True)
    remote_info = models.CharField('主遥控info', default='',max_length=10,blank=True)
    remote_zoom = models.CharField('主遥控zoom', default='',max_length=10,blank=True)
    remote_up = models.CharField('主遥控up', default='',max_length=10,blank=True)
    remote_down = models.CharField('主遥控down', default='',max_length=10,blank=True)
    remote_right = models.CharField('主遥控right', default='',max_length=10,blank=True)
    remote_left = models.CharField('主遥控left', default='',max_length=10,blank=True)
    remote_select = models.CharField('主遥控select', default='',max_length=10,blank=True)
    remote_menu= models.CharField('主遥控menu', default='',max_length=10,blank=True)
    remote_exit = models.CharField('主遥控exit', default='',max_length=10,blank=True)
    remote_autoadjust = models.CharField('主遥控auto', default='',max_length=10,blank=True)
    #
    remote_previous =models.CharField('上一首(PREVIOUS)', default='',max_length=10,blank=True)
    remote_next =models.CharField('下一首(NEXT)', default='',max_length=10,blank=True)
    remote_forward =models.CharField('快进(FORWARD)', default='',max_length=10,blank=True)
    remote_backward =models.CharField('快退(BACKWARD)', default='',max_length=10,blank=True)
    remote_pic =models.CharField('图像(PICTURE)', default='',max_length=10,blank=True)
    remote_audio =models.CharField('声音(AUDIO)', default='',max_length=10,blank=True)
    remote_play =models.CharField('播放(PLAY)', default='',max_length=10,blank=True)
    remote_stop =models.CharField('停止(STOP)', default='',max_length=10,blank=True)
    remote_red =models.CharField('红(RED)', default='',max_length=10,blank=True)
    remote_yellow =models.CharField('黄(YELLOW)', default='',max_length=10,blank=True)
    remote_blue = models.CharField('蓝(BULE)', default='',max_length=10,blank=True)
    remote_green =models.CharField('绿(GREEN)', default='',max_length=10,blank=True)
    #复用遥控
    remote_combine_red =models.CharField('复用红(RED)', default='',max_length=10,blank=True)
    remote_combine_yellow =models.CharField('复用黄(YELLOW)', default='',max_length=10,blank=True)
    remote_combine_blue = models.CharField('复用蓝(BULE)', default='',max_length=10,blank=True)
    remote_combine_green =models.CharField('复用绿(GREEN)', default='',max_length=10,blank=True)
    remote_volume_use_as_leftright = models.CharField('复用音量', default='',max_length=10,blank=True)
    remote_channel_use_as_updown = models.CharField('复用频道+', default='',max_length=10,blank=True)
    #不常用遥控
    remote_component = models.CharField('分量(COMPONENT)', default='',max_length=10,blank=True)
    remote_Dmp_Port = models.CharField('多媒体(DMP PORT)', default='',max_length=10,blank=True)
    remote_tv = models.CharField('电视(TV)', default='',max_length=10,blank=True)
    remote_scart = models.CharField('SCART1', default='',max_length=10,blank=True)
    remote_dmp = models.CharField('DMP', default='',max_length=10,blank=True)
    remote_subtitle = models.CharField('字幕(SUBTITLE)', default='',max_length=10,blank=True)
    remote_av = models.CharField('视频(AV1)', default='',max_length=10,blank=True)
    remote_av1 = models.CharField('AV2', default='',max_length=10,blank=True)
    remote_av2 = models.CharField('AV3', default='',max_length=10,blank=True)
    remote_zoomin = models.CharField('放大(ZOOM IN)', default='',max_length=10,blank=True)
    remote_zommout = models.CharField('缩小(ZOOM OUT)', default='',max_length=10,blank=True)
    remote_freeze = models.CharField('镜像(FREEZE)', default='',max_length=10,blank=True)
    remote_hdmi1 = models.CharField('HDMI2', default='',max_length=10,blank=True)
    remote_hdmi2 = models.CharField('HDMI3', default='',max_length=10,blank=True)
    remote_hdmi3 = models.CharField('HDMI4', default='',max_length=10,blank=True)
    remote_loop = models.CharField('循环(LOOP)', default='',max_length=10,blank=True)
    remote_playlist = models.CharField('播放列表(PLAYLIST)', default='',max_length=10,blank=True)
    remote_channel_fav_list = models.CharField('爱列表(CHANNEL FAV LIST)', default='',max_length=10,blank=True)
    remote_music = models.CharField('音乐(MUSIC)', default='',max_length=10,blank=True)
    remote_channel_list = models.CharField('节目表(CHANNEL LIST)', default='',max_length=10,blank=True)
    remote_record = models.CharField('刻录(RECORD)', default='',max_length=10,blank=True)
    remote_mts = models.CharField('丽音(MTS)', default='',max_length=10,blank=True)
    remote_cc = models.CharField('CC', default='',max_length=10,blank=True)
    remote_page_up = models.CharField('PAGE UP', default='',max_length=10,blank=True)
    remote_page_down = models.CharField('PAGE DOWN', default='',max_length=10,blank=True)
    remote_mix = models.CharField('MIX', default='',max_length=10,blank=True)
    remote_index = models.CharField('INDEX', default='',max_length=10,blank=True)
    remote_tv_input = models.CharField('TV INPUT', default='',max_length=10,blank=True)
    remote_channel_fav_plus = models.CharField('CHANNE FAV PLUS', default='',max_length=10,blank=True)
    remote_channel_fav_minus = models.CharField('CHANNEL FAV MINUS', default='',max_length=10,blank=True)
    remote_ab = models.CharField('AB', default='',max_length=10,blank=True)
    remote_tv_radio = models.CharField('TV RADIO', default='',max_length=10,blank=True)
    remote_factory_reste = models.CharField('FACTORY RESTE', default='',max_length=10,blank=True)
    remote_rotate_angle = models.CharField('ROTATE ANGLE', default='',max_length=10,blank=True)
    remote_goto = models.CharField('GOTO', default='',max_length=10,blank=True)
    remote_search_channel = models.CharField('SEARCH CHANNEL', default='',max_length=10,blank=True)
    remote_epg = models.CharField('EPG', default='',max_length=10,blank=True)
    remote_update = models.CharField('UPDATE', default='',max_length=10,blank=True)
    remote_ttx_mode = models.CharField('TTX MODE', default='',max_length=10,blank=True)
    remote_clock = models.CharField('CLOCK', default='',max_length=10,blank=True)
    remote_ttx = models.CharField('TTX', default='',max_length=10,blank=True)
    remote_size = models.CharField('SIZE', default='',max_length=10,blank=True)
    remote_hold = models.CharField('HOLD', default='',max_length=10,blank=True)
    remote_adjust = models.CharField('自动调整(ADJUST)', default='',max_length=10,blank=True)
    remote_key_disable_keypad = models.CharField('KEY DISABLE KEYPAD', default='',max_length=10,blank=True)
    remote_audio_track = models.CharField('AUDIO TRACK', default='',max_length=10,blank=True)
    remote_slow = models.CharField('慢放(SLOW)', default='',max_length=10,blank=True)
    remote_pause = models.CharField('暂停(PAUSE)', default='',max_length=10,blank=True)
    remote_subpage = models.CharField('SUBPAGE', default='',max_length=10,blank=True)
    remote_sv = models.CharField('SV', default='',max_length=10,blank=True)
    remote_aging = models.CharField('老化(AGING)', default='',max_length=10,blank=True)
    remote_step = models.CharField('STEP', default='',max_length=10,blank=True)
    remote_combine_key = models.CharField('COMBINE KEY', default='',max_length=10,blank=True)
    remote_reveal = models.CharField('REVEAL', default='',max_length=10,blank=True)
    
    def __unicode__(self):
        return str(self.id)

class ProRemote2(models.Model):
    remote_name = models.CharField('副遥控名称', default='',max_length=256,blank=True)
    remote_head_code = models.CharField('副遥控头码', default='',max_length=10,blank=True)
    remote_header_code_time = models.CharField('副遥控头码时间', default='9000',max_length=10,blank=True)
    remote_power = models.CharField('副遥控power', default='',max_length=10,blank=True)
    remote_mute = models.CharField('副遥控mute', default='',max_length=10,blank=True)
    remote_num_1 = models.CharField('副遥控num1', default='',max_length=10,blank=True)
    remote_num_2 = models.CharField('副遥控num2', default='',max_length=10,blank=True)
    remote_num_3 = models.CharField('副遥控num3', default='',max_length=10,blank=True)
    remote_num_4 = models.CharField('副遥控num4', default='',max_length=10,blank=True)
    remote_num_5 = models.CharField('副遥控num5', default='',max_length=10,blank=True)
    remote_num_6 = models.CharField('副遥控num6', default='',max_length=10,blank=True)
    remote_num_7 = models.CharField('副遥控num7', default='',max_length=10,blank=True)
    remote_num_8 = models.CharField('副遥控num8', default='',max_length=10,blank=True)
    remote_num_9 = models.CharField('副遥控num9 ', default='',max_length=10,blank=True)
    remote_num_0 = models.CharField('副遥控num0', default='',max_length=10,blank=True)
    remote_dash = models.CharField('副遥控dash', default='',max_length=10,blank=True)
    remote_channel_return = models.CharField('副遥控return', default='',max_length=10,blank=True)
    remote_sleep = models.CharField('副遥控sleep', default='',max_length=10,blank=True)
    remote_pc = models.CharField('副遥控vga', default='',max_length=10,blank=True)
    remote_hdmi = models.CharField('副遥控hdmi', default='',max_length=10,blank=True)
    remote_volume_plus = models.CharField('副遥控vol_plus', default='',max_length=10,blank=True)
    remote_volume_minus = models.CharField('副遥控vol_minus', default='',max_length=10,blank=True)
    remote_channel_plus = models.CharField('副遥控chl_plus', default='',max_length=10,blank=True)
    remote_channel_minus = models.CharField('副遥控chl_minus', default='',max_length=10,blank=True)
    remote_input_source = models.CharField('副遥控source', default='',max_length=10,blank=True)
    remote_info = models.CharField('副遥控info', default='',max_length=10,blank=True)
    remote_zoom = models.CharField('副遥控zoom', default='',max_length=10,blank=True)
    remote_up = models.CharField('副遥控up', default='',max_length=10,blank=True)
    remote_down = models.CharField('副遥控down', default='',max_length=10,blank=True)
    remote_right = models.CharField('副遥控right', default='',max_length=10,blank=True)
    remote_left = models.CharField('副遥控left', default='',max_length=10,blank=True)
    remote_select = models.CharField('副遥控select', default='',max_length=10,blank=True)
    remote_menu= models.CharField('副遥控menu', default='',max_length=10,blank=True)
    remote_exit = models.CharField('副遥控exit', default='',max_length=10,blank=True)
    remote_autoadjust = models.CharField('副遥控auto', default='',max_length=10,blank=True)
    #
    remote_previous =models.CharField('上一首(PREVIOUS)', default='',max_length=10,blank=True)
    remote_next =models.CharField('下一首(NEXT)', default='',max_length=10,blank=True)
    remote_forward =models.CharField('快进(FORWARD)', default='',max_length=10,blank=True)
    remote_backward =models.CharField('快退(BACKWARD)', default='',max_length=10,blank=True)
    remote_pic =models.CharField('图像(PICTURE)', default='',max_length=10,blank=True)
    remote_audio =models.CharField('声音(AUDIO)', default='',max_length=10,blank=True)
    remote_play =models.CharField('播放(PLAY)', default='',max_length=10,blank=True)
    remote_stop =models.CharField('停止(STOP)', default='',max_length=10,blank=True)
    remote_red =models.CharField('红(RED)', default='',max_length=10,blank=True)
    remote_yellow =models.CharField('黄(YELLOW)', default='',max_length=10,blank=True)
    remote_blue = models.CharField('蓝(BULE)', default='',max_length=10,blank=True)
    remote_green =models.CharField('绿(GREEN)', default='',max_length=10,blank=True)
    #复用遥控
    remote_combine_red =models.CharField('复用红(RED)', default='',max_length=10,blank=True)
    remote_combine_yellow =models.CharField('复用黄(YELLOW)', default='',max_length=10,blank=True)
    remote_combine_blue = models.CharField('复用蓝(BULE)', default='',max_length=10,blank=True)
    remote_combine_green =models.CharField('复用绿(GREEN)', default='',max_length=10,blank=True)
    remote_volume_use_as_leftright = models.CharField('复用音量', default='',max_length=10,blank=True)
    remote_channel_use_as_updown = models.CharField('复用频道+', default='',max_length=10,blank=True)
    #不常用遥控
    remote_component = models.CharField('分量(COMPONENT)', default='',max_length=10,blank=True)
    remote_Dmp_Port = models.CharField('多媒体(DMP PORT)', default='',max_length=10,blank=True)
    remote_tv = models.CharField('电视(TV)', default='',max_length=10,blank=True)
    remote_scart = models.CharField('SCART1', default='',max_length=10,blank=True)
    remote_dmp = models.CharField('DMP', default='',max_length=10,blank=True)
    remote_subtitle = models.CharField('字幕(SUBTITLE)', default='',max_length=10,blank=True)
    remote_av = models.CharField('视频(AV1)', default='',max_length=10,blank=True)
    remote_av1 = models.CharField('AV2', default='',max_length=10,blank=True)
    remote_av2 = models.CharField('AV3', default='',max_length=10,blank=True)
    remote_zoomin = models.CharField('放大(ZOOM IN)', default='',max_length=10,blank=True)
    remote_zommout = models.CharField('缩小(ZOOM OUT)', default='',max_length=10,blank=True)
    remote_freeze = models.CharField('镜像(FREEZE)', default='',max_length=10,blank=True)
    remote_hdmi1 = models.CharField('HDMI2', default='',max_length=10,blank=True)
    remote_hdmi2 = models.CharField('HDMI3', default='',max_length=10,blank=True)
    remote_hdmi3 = models.CharField('HDMI4', default='',max_length=10,blank=True)
    remote_loop = models.CharField('循环(LOOP)', default='',max_length=10,blank=True)
    remote_playlist = models.CharField('播放列表(PLAYLIST)', default='',max_length=10,blank=True)
    remote_channel_fav_list = models.CharField('爱列表(CHANNEL FAV LIST)', default='',max_length=10,blank=True)
    remote_music = models.CharField('音乐(MUSIC)', default='',max_length=10,blank=True)
    remote_channel_list = models.CharField('节目表(CHANNEL LIST)', default='',max_length=10,blank=True)
    remote_record = models.CharField('刻录(RECORD)', default='',max_length=10,blank=True)
    remote_mts = models.CharField('丽音(MTS)', default='',max_length=10,blank=True)
    remote_cc = models.CharField('CC', default='',max_length=10,blank=True)
    remote_page_up = models.CharField('PAGE UP', default='',max_length=10,blank=True)
    remote_page_down = models.CharField('PAGE DOWN', default='',max_length=10,blank=True)
    remote_mix = models.CharField('MIX', default='',max_length=10,blank=True)
    remote_index = models.CharField('INDEX', default='',max_length=10,blank=True)
    remote_tv_input = models.CharField('TV INPUT', default='',max_length=10,blank=True)
    remote_channel_fav_plus = models.CharField('CHANNE FAV PLUS', default='',max_length=10,blank=True)
    remote_channel_fav_minus = models.CharField('CHANNEL FAV MINUS', default='',max_length=10,blank=True)
    remote_ab = models.CharField('AB', default='',max_length=10,blank=True)
    remote_tv_radio = models.CharField('TV RADIO', default='',max_length=10,blank=True)
    remote_factory_reste = models.CharField('FACTORY RESTE', default='',max_length=10,blank=True)
    remote_rotate_angle = models.CharField('ROTATE ANGLE', default='',max_length=10,blank=True)
    remote_goto = models.CharField('GOTO', default='',max_length=10,blank=True)
    remote_search_channel = models.CharField('SEARCH CHANNEL', default='',max_length=10,blank=True)
    remote_epg = models.CharField('EPG', default='',max_length=10,blank=True)
    remote_update = models.CharField('UPDATE', default='',max_length=10,blank=True)
    remote_ttx_mode = models.CharField('TTX MODE', default='',max_length=10,blank=True)
    remote_clock = models.CharField('CLOCK', default='',max_length=10,blank=True)
    remote_ttx = models.CharField('TTX', default='',max_length=10,blank=True)
    remote_size = models.CharField('SIZE', default='',max_length=10,blank=True)
    remote_hold = models.CharField('HOLD', default='',max_length=10,blank=True)
    remote_adjust = models.CharField('自动调整(ADJUST)', default='',max_length=10,blank=True)
    remote_key_disable_keypad = models.CharField('KEY DISABLE KEYPAD', default='',max_length=10,blank=True)
    remote_audio_track = models.CharField('AUDIO TRACK', default='',max_length=10,blank=True)
    remote_slow = models.CharField('慢放(SLOW)', default='',max_length=10,blank=True)
    remote_pause = models.CharField('暂停(PAUSE)', default='',max_length=10,blank=True)
    remote_subpage = models.CharField('SUBPAGE', default='',max_length=10,blank=True)
    remote_sv = models.CharField('SV', default='',max_length=10,blank=True)
    remote_aging = models.CharField('老化(AGING)', default='',max_length=10,blank=True)
    remote_step = models.CharField('STEP', default='',max_length=10,blank=True)
    remote_combine_key = models.CharField('COMBINE KEY', default='',max_length=10,blank=True)
    remote_reveal = models.CharField('REVEAL', default='',max_length=10,blank=True)
    
    def __unicode__(self):
        return str(self.id)

class ProKeypad(models.Model):
    #按键
    keypad_name = models.CharField('按键名称', default='',max_length=256,blank=True)
    keypad_is_5key_mode = models.CharField('是否开启五键模式', default='',max_length=10,blank=True)
    keypad_k0 = models.CharField('按键k0', default='',max_length=10,blank=True)
    keypad_k1 = models.CharField('按键k1', default='',max_length=10,blank=True)
    keypad_k2 = models.CharField('按键k2', default='',max_length=10,blank=True)
    keypad_k3 = models.CharField('按键k3', default='',max_length=10,blank=True)
    keypad_k4 = models.CharField('按键k4', default='',max_length=10,blank=True)
    keypad_k5 = models.CharField('按键k5', default='',max_length=10,blank=True)
    keypad_k6 = models.CharField('按键k6', default='',max_length=10,blank=True)
    
    def __unicode__(self):
        return str(self.id)

class ProPanel(models.Model):
    #屏幕参数
    panel_name = models.CharField('屏参名称', default='',max_length=256,blank=True)
    panel_dual_port = models.CharField('双屏线接口', default='',max_length=10,blank=True)
    panel_double_clock = models.CharField('双时钟信号', default='',max_length=10,blank=True)
    panel_swap_port = models.CharField('信号奇偶反', default='',max_length=10,blank=True)
    panel_swap_odd_ml = models.CharField('奇信号高低反', default='',max_length=10,blank=True)
    panel_swap_even_ml = models.CharField('偶信号高低反', default='',max_length=10,blank=True)
    panel_swap_odd_rb = models.CharField('奇信号红蓝反', default='',max_length=10,blank=True)
    panel_swap_even_rb = models.CharField('偶信号红蓝反', default='',max_length=10,blank=True)
    panel_swap_odd_rg = models.CharField('奇信号红绿反', default='',max_length=10,blank=True)
    panel_swap_even_rg = models.CharField('偶信号红绿反', default='',max_length=10,blank=True)
    panel_swap_odd_gb = models.CharField('奇信号绿蓝反', default='',max_length=10,blank=True)
    panel_swap_even_gb = models.CharField('偶信号绿蓝反', default='',max_length=10,blank=True)
    panel_map = models.CharField('屏位数', default='',max_length=10,blank=True)
    panel_on_timing1 = models.CharField('驱屏信号到电压时间', default='',max_length=10,blank=True)
    panel_on_timing2 = models.CharField('背光延时时间', default='',max_length=10,blank=True)
    panel_hsync_width = models.CharField('行宽度', default='',max_length=10,blank=True)
    panel_hsync_back_porch = models.CharField('行起始', default='',max_length=10,blank=True)
    panel_vsync_width = models.CharField('场宽度', default='',max_length=10,blank=True)
    panel_vsync_back_porch = models.CharField('场起始', default='',max_length=10,blank=True)
    panel_width_define = models.CharField('行物理分辨率', default='',max_length=10,blank=True)
    panel_height_define = models.CharField('场物理分辨率', default='',max_length=10,blank=True)
    panel_max_htotal = models.CharField('行最大值', default='',max_length=10,blank=True)
    panel_htotal = models.CharField('行默认值', default='',max_length=10,blank=True)
    panel_min_htotal = models.CharField('行最小值', default='',max_length=10,blank=True)
    panel_max_vtotal = models.CharField('场最大值', default='',max_length=10,blank=True)
    panel_vtotal = models.CharField('场默认值', default='',max_length=10,blank=True)
    panel_min_vtotal = models.CharField('场最小值', default='',max_length=10,blank=True)
    panel_out_timing_mode = models.CharField('变换模式', default='',max_length=50,blank=True)
    enable_black_white_change = models.CharField('黑白反', default='',max_length=10,blank=True)
    panel_enable_60hz = models.CharField('60HZ', default='',max_length=10,blank=True)
    
    def __unicode__(self):
        return str(self.id)

class ProPQ(models.Model):
    PQTime   = models.CharField('创建时间',default='',max_length=128)
    pq_name   = models.CharField('pq_name', default='',max_length=128)
    #VGA
    cool_gainr_VGA = models.CharField('cool_gainr_VGA', default='',max_length=10,blank=True)
    normal_gainr_VGA = models.CharField('normal_gainr_VGA', default='',max_length=10,blank=True)
    warm_gainr_VGA = models.CharField('warm_gainr_VGA', default='',max_length=10,blank=True)
    cool_gaing_VGA = models.CharField('cool_gaing_VGA', default='',max_length=10,blank=True)
    normal_gaing_VGA = models.CharField('normal_gaing_VGA', default='',max_length=10,blank=True)
    warm_gaing_VGA = models.CharField('warm_gaing_VGA', default='',max_length=10,blank=True)
    cool_gainb_VGA = models.CharField('cool_gainb_VGA', default='',max_length=10,blank=True)
    normal_gainb_VGA = models.CharField('normal_gainb_VGA', default='',max_length=10,blank=True)
    warm_gainb_VGA = models.CharField('warm_gainb_VGA', default='',max_length=10,blank=True)
    cool_offsetr_VGA = models.CharField('cool_offsetr_VGA', default='',max_length=10,blank=True)
    normal_offsetr_VGA = models.CharField('normal_offsetr_VGA', default='',max_length=10,blank=True)
    warm_offsetr_VGA = models.CharField('warm_offsetr_VGA', default='',max_length=10,blank=True)
    cool_offsetg_VGA = models.CharField('cool_offsetg_VGA', default='',max_length=10,blank=True)
    normal_offsetg_VGA = models.CharField('normal_offsetg_VGA', default='',max_length=10,blank=True)
    warm_offsetg_VGA = models.CharField('warm_offsetg_VGA', default='',max_length=10,blank=True)
    cool_offsetb_VGA = models.CharField('cool_offsetb_VGA', default='',max_length=10,blank=True)
    normal_offsetb_VGA = models.CharField('normal_offsetb_VGA', default='',max_length=10,blank=True)
    warm_offsetb_VGA = models.CharField('warm_offsetb_VGA', default='',max_length=10,blank=True)
    contrast_osd0_VGA = models.CharField('contrast_osd0_VGA', default='',max_length=10,blank=True)
    contrast_osd25_VGA = models.CharField('contrast_osd25_VGA', default='',max_length=10,blank=True)
    contrast_osd50_VGA = models.CharField('contrast_osd50_VGA', default='',max_length=10,blank=True)
    contrast_osd75_VGA = models.CharField('contrast_osd75_VGA', default='',max_length=10,blank=True)
    contrast_osd100_VGA = models.CharField('contrast_osd100_VGA', default='',max_length=10,blank=True)
    brightness_osd0_VGA = models.CharField('brightness_osd0_VGA', default='',max_length=10,blank=True)
    brightness_osd25_VGA = models.CharField('brightness_osd25_VGA', default='',max_length=10,blank=True)
    brightness_osd50_VGA = models.CharField('brightness_osd50_VGA', default='',max_length=10,blank=True)
    brightness_osd75_VGA = models.CharField('brightness_osd75_VGA', default='',max_length=10,blank=True)
    brightness_osd100_VGA = models.CharField('brightness_osd100_VGA', default='',max_length=10,blank=True)
    saturation_osd0_VGA = models.CharField('saturation_osd0_VGA', default='',max_length=10,blank=True)
    saturation_osd25_VGA = models.CharField('saturation_osd25_VGA', default='',max_length=10,blank=True)
    saturation_osd50_VGA = models.CharField('saturation_osd50_VGA', default='',max_length=10,blank=True)
    saturation_osd75_VGA = models.CharField('saturation_osd75_VGA', default='',max_length=10,blank=True)
    saturation_osd100_VGA = models.CharField('saturation_osd100_VGA', default='',max_length=10,blank=True)
    sharpness_osd0_VGA = models.CharField('sharpness_osd0_VGA', default='',max_length=10,blank=True)
    sharpness_osd25_VGA = models.CharField('sharpness_osd25_VGA', default='',max_length=10,blank=True)
    sharpness_osd50_VGA = models.CharField('sharpness_osd50_VGA', default='',max_length=10,blank=True)
    sharpness_osd75_VGA = models.CharField('sharpness_osd75_VGA', default='',max_length=10,blank=True)
    sharpness_osd100_VGA = models.CharField('sharpness_osd100_VGA', default='',max_length=10,blank=True)
    hue_osd0_VGA = models.CharField('hue_osd0_VGA', default='',max_length=10,blank=True)
    hue_osd25_VGA = models.CharField('hue_osd25_VGA', default='',max_length=10,blank=True)
    hue_osd50_VGA = models.CharField('hue_osd50_VGA', default='',max_length=10,blank=True)
    hue_osd75_VGA = models.CharField('hue_osd75_VGA', default='',max_length=10,blank=True)
    hue_osd100_VGA = models.CharField('hue_osd100_VGA', default='',max_length=10,blank=True)
    #ATV
    cool_gainr_ATV = models.CharField('cool_gainr_ATV', default='',max_length=10,blank=True)
    normal_gainr_ATV = models.CharField('normal_gainr_ATV', default='',max_length=10,blank=True)
    warm_gainr_ATV = models.CharField('warm_gainr_ATV', default='',max_length=10,blank=True)
    cool_gaing_ATV = models.CharField('cool_gaing_ATV', default='',max_length=10,blank=True)
    normal_gaing_ATV = models.CharField('normal_gaing_ATV', default='',max_length=10,blank=True)
    warm_gaing_ATV = models.CharField('warm_gaing_ATV', default='',max_length=10,blank=True)
    cool_gainb_ATV = models.CharField('cool_gainb_ATV', default='',max_length=10,blank=True)
    normal_gainb_ATV = models.CharField('normal_gainb_ATV', default='',max_length=10,blank=True)
    warm_gainb_ATV = models.CharField('warm_gainb_ATV', default='',max_length=10,blank=True)
    cool_offsetr_ATV = models.CharField('cool_offsetr_ATV', default='',max_length=10,blank=True)
    normal_offsetr_ATV = models.CharField('normal_offsetr_ATV', default='',max_length=10,blank=True)
    warm_offsetr_ATV = models.CharField('warm_offsetr_ATV', default='',max_length=10,blank=True)
    cool_offsetg_ATV = models.CharField('cool_offsetg_ATV', default='',max_length=10,blank=True)
    normal_offsetg_ATV = models.CharField('normal_offsetg_ATV', default='',max_length=10,blank=True)
    warm_offsetg_ATV = models.CharField('warm_offsetg_ATV', default='',max_length=10,blank=True)
    cool_offsetb_ATV = models.CharField('cool_offsetb_ATV', default='',max_length=10,blank=True)
    normal_offsetb_ATV = models.CharField('normal_offsetb_ATV', default='',max_length=10,blank=True)
    warm_offsetb_ATV = models.CharField('warm_offsetb_ATV', default='',max_length=10,blank=True)
    contrast_osd0_ATV = models.CharField('contrast_osd0_ATV', default='',max_length=10,blank=True)
    contrast_osd25_ATV = models.CharField('contrast_osd25_ATV', default='',max_length=10,blank=True)
    contrast_osd50_ATV = models.CharField('contrast_osd50_ATV', default='',max_length=10,blank=True)
    contrast_osd75_ATV = models.CharField('contrast_osd75_ATV', default='',max_length=10,blank=True)
    contrast_osd100_ATV = models.CharField('contrast_osd100_ATV', default='',max_length=10,blank=True)
    brightness_osd0_ATV = models.CharField('brightness_osd0_ATV', default='',max_length=10,blank=True)
    brightness_osd25_ATV = models.CharField('brightness_osd25_ATV', default='',max_length=10,blank=True)
    brightness_osd50_ATV = models.CharField('brightness_osd50_ATV', default='',max_length=10,blank=True)
    brightness_osd75_ATV = models.CharField('brightness_osd75_ATV', default='',max_length=10,blank=True)
    brightness_osd100_ATV = models.CharField('brightness_osd100_ATV', default='',max_length=10,blank=True)
    saturation_osd0_ATV = models.CharField('saturation_osd0_ATV', default='',max_length=10,blank=True)
    saturation_osd25_ATV = models.CharField('saturation_osd25_ATV', default='',max_length=10,blank=True)
    saturation_osd50_ATV = models.CharField('saturation_osd50_ATV', default='',max_length=10,blank=True)
    saturation_osd75_ATV = models.CharField('saturation_osd75_ATV', default='',max_length=10,blank=True)
    saturation_osd100_ATV = models.CharField('saturation_osd100_ATV', default='',max_length=10,blank=True)
    sharpness_osd0_ATV = models.CharField('sharpness_osd0_ATV', default='',max_length=10,blank=True)
    sharpness_osd25_ATV = models.CharField('sharpness_osd25_ATV', default='',max_length=10,blank=True)
    sharpness_osd50_ATV = models.CharField('sharpness_osd50_ATV', default='',max_length=10,blank=True)
    sharpness_osd75_ATV = models.CharField('sharpness_osd75_ATV', default='',max_length=10,blank=True)
    sharpness_osd100_ATV = models.CharField('sharpness_osd100_ATV', default='',max_length=10,blank=True)
    hue_osd0_ATV = models.CharField('hue_osd0_ATV', default='',max_length=10,blank=True)
    hue_osd25_ATV = models.CharField('hue_osd25_ATV', default='',max_length=10,blank=True)
    hue_osd50_ATV = models.CharField('hue_osd50_ATV', default='',max_length=10,blank=True)
    hue_osd75_ATV = models.CharField('hue_osd75_ATV', default='',max_length=10,blank=True)
    hue_osd100_ATV = models.CharField('hue_osd100_ATV', default='',max_length=10,blank=True)
    #AV
    cool_gainr_AV = models.CharField('cool_gainr_AV', default='',max_length=10,blank=True)
    normal_gainr_AV = models.CharField('normal_gainr_AV', default='',max_length=10,blank=True)
    warm_gainr_AV = models.CharField('warm_gainr_AV', default='',max_length=10,blank=True)
    cool_gaing_AV = models.CharField('cool_gaing_AV', default='',max_length=10,blank=True)
    normal_gaing_AV = models.CharField('normal_gaing_AV', default='',max_length=10,blank=True)
    warm_gaing_AV = models.CharField('warm_gaing_AV', default='',max_length=10,blank=True)
    cool_gainb_AV = models.CharField('cool_gainb_AV', default='',max_length=10,blank=True)
    normal_gainb_AV = models.CharField('normal_gainb_AV', default='',max_length=10,blank=True)
    warm_gainb_AV = models.CharField('warm_gainb_AV', default='',max_length=10,blank=True)
    cool_offsetr_AV = models.CharField('cool_offsetr_AV', default='',max_length=10,blank=True)
    normal_offsetr_AV = models.CharField('normal_offsetr_AV', default='',max_length=10,blank=True)
    warm_offsetr_AV = models.CharField('warm_offsetr_AV', default='',max_length=10,blank=True)
    cool_offsetg_AV = models.CharField('cool_offsetg_AV', default='',max_length=10,blank=True)
    normal_offsetg_AV = models.CharField('normal_offsetg_AV', default='',max_length=10,blank=True)
    warm_offsetg_AV = models.CharField('warm_offsetg_AV', default='',max_length=10,blank=True)
    cool_offsetb_AV = models.CharField('cool_offsetb_AV', default='',max_length=10,blank=True)
    normal_offsetb_AV = models.CharField('normal_offsetb_AV', default='',max_length=10,blank=True)
    warm_offsetb_AV = models.CharField('warm_offsetb_AV', default='',max_length=10,blank=True)
    contrast_osd0_AV = models.CharField('contrast_osd0_AV', default='',max_length=10,blank=True)
    contrast_osd25_AV = models.CharField('contrast_osd25_AV', default='',max_length=10,blank=True)
    contrast_osd50_AV = models.CharField('contrast_osd50_AV', default='',max_length=10,blank=True)
    contrast_osd75_AV = models.CharField('contrast_osd75_AV', default='',max_length=10,blank=True)
    contrast_osd100_AV = models.CharField('contrast_osd100_AV', default='',max_length=10,blank=True)
    brightness_osd0_AV = models.CharField('brightness_osd0_AV', default='',max_length=10,blank=True)
    brightness_osd25_AV = models.CharField('brightness_osd25_AV', default='',max_length=10,blank=True)
    brightness_osd50_AV = models.CharField('brightness_osd50_AV', default='',max_length=10,blank=True)
    brightness_osd75_AV = models.CharField('brightness_osd75_AV', default='',max_length=10,blank=True)
    brightness_osd100_AV = models.CharField('brightness_osd100_AV', default='',max_length=10,blank=True)
    saturation_osd0_AV = models.CharField('saturation_osd0_AV', default='',max_length=10,blank=True)
    saturation_osd25_AV = models.CharField('saturation_osd25_AV', default='',max_length=10,blank=True)
    saturation_osd50_AV = models.CharField('saturation_osd50_AV', default='',max_length=10,blank=True)
    saturation_osd75_AV = models.CharField('saturation_osd75_AV', default='',max_length=10,blank=True)
    saturation_osd100_AV = models.CharField('saturation_osd100_AV', default='',max_length=10,blank=True)
    sharpness_osd0_AV = models.CharField('sharpness_osd0_AV', default='',max_length=10,blank=True)
    sharpness_osd25_AV = models.CharField('sharpness_osd25_AV', default='',max_length=10,blank=True)
    sharpness_osd50_AV = models.CharField('sharpness_osd50_AV', default='',max_length=10,blank=True)
    sharpness_osd75_AV = models.CharField('sharpness_osd75_AV', default='',max_length=10,blank=True)
    sharpness_osd100_AV = models.CharField('sharpness_osd100_AV', default='',max_length=10,blank=True)
    hue_osd0_AV = models.CharField('hue_osd0_AV', default='',max_length=10,blank=True)
    hue_osd25_AV = models.CharField('hue_osd25_AV', default='',max_length=10,blank=True)
    hue_osd50_AV = models.CharField('hue_osd50_AV', default='',max_length=10,blank=True)
    hue_osd75_AV = models.CharField('hue_osd75_AV', default='',max_length=10,blank=True)
    hue_osd100_AV = models.CharField('hue_osd100_AV', default='',max_length=10,blank=True)
    #YPBPR
    cool_gainr_YPBPR = models.CharField('cool_gainr_YPBPR', default='',max_length=10,blank=True)
    normal_gainr_YPBPR = models.CharField('normal_gainr_YPBPR', default='',max_length=10,blank=True)
    warm_gainr_YPBPR = models.CharField('warm_gainr_YPBPR', default='',max_length=10,blank=True)
    cool_gaing_YPBPR = models.CharField('cool_gaing_YPBPR', default='',max_length=10,blank=True)
    normal_gaing_YPBPR = models.CharField('normal_gaing_YPBPR', default='',max_length=10,blank=True)
    warm_gaing_YPBPR = models.CharField('warm_gaing_YPBPR', default='',max_length=10,blank=True)
    cool_gainb_YPBPR = models.CharField('cool_gainb_YPBPR', default='',max_length=10,blank=True)
    normal_gainb_YPBPR = models.CharField('normal_gainb_YPBPR', default='',max_length=10,blank=True)
    warm_gainb_YPBPR = models.CharField('warm_gainb_YPBPR', default='',max_length=10,blank=True)
    cool_offsetr_YPBPR = models.CharField('cool_offsetr_YPBPR', default='',max_length=10,blank=True)
    normal_offsetr_YPBPR = models.CharField('normal_offsetr_YPBPR', default='',max_length=10,blank=True)
    warm_offsetr_YPBPR = models.CharField('warm_offsetr_YPBPR', default='',max_length=10,blank=True)
    cool_offsetg_YPBPR = models.CharField('cool_offsetg_YPBPR', default='',max_length=10,blank=True)
    normal_offsetg_YPBPR = models.CharField('normal_offsetg_YPBPR', default='',max_length=10,blank=True)
    warm_offsetg_YPBPR = models.CharField('warm_offsetg_YPBPR', default='',max_length=10,blank=True)
    cool_offsetb_YPBPR = models.CharField('cool_offsetb_YPBPR', default='',max_length=10,blank=True)
    normal_offsetb_YPBPR = models.CharField('normal_offsetb_YPBPR', default='',max_length=10,blank=True)
    warm_offsetb_YPBPR = models.CharField('warm_offsetb_YPBPR', default='',max_length=10,blank=True)
    contrast_osd0_YPBPR = models.CharField('contrast_osd0_YPBPR', default='',max_length=10,blank=True)
    contrast_osd25_YPBPR = models.CharField('contrast_osd25_YPBPR', default='',max_length=10,blank=True)
    contrast_osd50_YPBPR = models.CharField('contrast_osd50_YPBPR', default='',max_length=10,blank=True)
    contrast_osd75_YPBPR = models.CharField('contrast_osd75_YPBPR', default='',max_length=10,blank=True)
    contrast_osd100_YPBPR = models.CharField('contrast_osd100_YPBPR', default='',max_length=10,blank=True)
    brightness_osd0_YPBPR = models.CharField('brightness_osd0_YPBPR', default='',max_length=10,blank=True)
    brightness_osd25_YPBPR = models.CharField('brightness_osd25_YPBPR', default='',max_length=10,blank=True)
    brightness_osd50_YPBPR = models.CharField('brightness_osd50_YPBPR', default='',max_length=10,blank=True)
    brightness_osd75_YPBPR = models.CharField('brightness_osd75_YPBPR', default='',max_length=10,blank=True)
    brightness_osd100_YPBPR = models.CharField('brightness_osd100_YPBPR', default='',max_length=10,blank=True)
    saturation_osd0_YPBPR = models.CharField('saturation_osd0_YPBPR', default='',max_length=10,blank=True)
    saturation_osd25_YPBPR = models.CharField('saturation_osd25_YPBPR', default='',max_length=10,blank=True)
    saturation_osd50_YPBPR = models.CharField('saturation_osd50_YPBPR', default='',max_length=10,blank=True)
    saturation_osd75_YPBPR = models.CharField('saturation_osd75_YPBPR', default='',max_length=10,blank=True)
    saturation_osd100_YPBPR = models.CharField('saturation_osd100_YPBPR', default='',max_length=10,blank=True)
    sharpness_osd0_YPBPR = models.CharField('sharpness_osd0_YPBPR', default='',max_length=10,blank=True)
    sharpness_osd25_YPBPR = models.CharField('sharpness_osd25_YPBPR', default='',max_length=10,blank=True)
    sharpness_osd50_YPBPR = models.CharField('sharpness_osd50_YPBPR', default='',max_length=10,blank=True)
    sharpness_osd75_YPBPR = models.CharField('sharpness_osd75_YPBPR', default='',max_length=10,blank=True)
    sharpness_osd100_YPBPR = models.CharField('sharpness_osd100_YPBPR', default='',max_length=10,blank=True)
    hue_osd0_YPBPR = models.CharField('hue_osd0_YPBPR', default='',max_length=10,blank=True)
    hue_osd25_YPBPR = models.CharField('hue_osd25_YPBPR', default='',max_length=10,blank=True)
    hue_osd50_YPBPR = models.CharField('hue_osd50_YPBPR', default='',max_length=10,blank=True)
    hue_osd75_YPBPR = models.CharField('hue_osd75_YPBPR', default='',max_length=10,blank=True)
    hue_osd100_YPBPR = models.CharField('hue_osd100_YPBPR', default='',max_length=10,blank=True)
    #HDMI
    cool_gainr_HDMI = models.CharField('cool_gainr_HDMI', default='',max_length=10,blank=True)
    normal_gainr_HDMI = models.CharField('normal_gainr_HDMI', default='',max_length=10,blank=True)
    warm_gainr_HDMI = models.CharField('warm_gainr_HDMI', default='',max_length=10,blank=True)
    cool_gaing_HDMI = models.CharField('cool_gaing_HDMI', default='',max_length=10,blank=True)
    normal_gaing_HDMI = models.CharField('normal_gaing_HDMI', default='',max_length=10,blank=True)
    warm_gaing_HDMI = models.CharField('warm_gaing_HDMI', default='',max_length=10,blank=True)
    cool_gainb_HDMI = models.CharField('cool_gainb_HDMI', default='',max_length=10,blank=True)
    normal_gainb_HDMI = models.CharField('normal_gainb_HDMI', default='',max_length=10,blank=True)
    warm_gainb_HDMI = models.CharField('warm_gainb_HDMI', default='',max_length=10,blank=True)
    cool_offsetr_HDMI = models.CharField('cool_offsetr_HDMI', default='',max_length=10,blank=True)
    normal_offsetr_HDMI = models.CharField('normal_offsetr_HDMI', default='',max_length=10,blank=True)
    warm_offsetr_HDMI = models.CharField('warm_offsetr_HDMI', default='',max_length=10,blank=True)
    cool_offsetg_HDMI = models.CharField('cool_offsetg_HDMI', default='',max_length=10,blank=True)
    normal_offsetg_HDMI = models.CharField('normal_offsetg_HDMI', default='',max_length=10,blank=True)
    warm_offsetg_HDMI = models.CharField('warm_offsetg_HDMI', default='',max_length=10,blank=True)
    cool_offsetb_HDMI = models.CharField('cool_offsetb_HDMI', default='',max_length=10,blank=True)
    normal_offsetb_HDMI = models.CharField('normal_offsetb_HDMI', default='',max_length=10,blank=True)
    warm_offsetb_HDMI = models.CharField('warm_offsetb_HDMI', default='',max_length=10,blank=True)
    contrast_osd0_HDMI = models.CharField('contrast_osd0_HDMI', default='',max_length=10,blank=True)
    contrast_osd25_HDMI = models.CharField('contrast_osd25_HDMI', default='',max_length=10,blank=True)
    contrast_osd50_HDMI = models.CharField('contrast_osd50_HDMI', default='',max_length=10,blank=True)
    contrast_osd75_HDMI = models.CharField('contrast_osd75_HDMI', default='',max_length=10,blank=True)
    contrast_osd100_HDMI = models.CharField('contrast_osd100_HDMI', default='',max_length=10,blank=True)
    brightness_osd0_HDMI = models.CharField('brightness_osd0_HDMI', default='',max_length=10,blank=True)
    brightness_osd25_HDMI = models.CharField('brightness_osd25_HDMI', default='',max_length=10,blank=True)
    brightness_osd50_HDMI = models.CharField('brightness_osd50_HDMI', default='',max_length=10,blank=True)
    brightness_osd75_HDMI = models.CharField('brightness_osd75_HDMI', default='',max_length=10,blank=True)
    brightness_osd100_HDMI = models.CharField('brightness_osd100_HDMI', default='',max_length=10,blank=True)
    saturation_osd0_HDMI = models.CharField('saturation_osd0_HDMI', default='',max_length=10,blank=True)
    saturation_osd25_HDMI = models.CharField('saturation_osd25_HDMI', default='',max_length=10,blank=True)
    saturation_osd50_HDMI = models.CharField('saturation_osd50_HDMI', default='',max_length=10,blank=True)
    saturation_osd75_HDMI = models.CharField('saturation_osd75_HDMI', default='',max_length=10,blank=True)
    saturation_osd100_HDMI = models.CharField('saturation_osd100_HDMI', default='',max_length=10,blank=True)
    sharpness_osd0_HDMI = models.CharField('sharpness_osd0_HDMI', default='',max_length=10,blank=True)
    sharpness_osd25_HDMI = models.CharField('sharpness_osd25_HDMI', default='',max_length=10,blank=True)
    sharpness_osd50_HDMI = models.CharField('sharpness_osd50_HDMI', default='',max_length=10,blank=True)
    sharpness_osd75_HDMI = models.CharField('sharpness_osd75_HDMI', default='',max_length=10,blank=True)
    sharpness_osd100_HDMI = models.CharField('sharpness_osd100_HDMI', default='',max_length=10,blank=True)
    hue_osd0_HDMI = models.CharField('hue_osd0_HDMI', default='',max_length=10,blank=True)
    hue_osd25_HDMI = models.CharField('hue_osd25_HDMI', default='',max_length=10,blank=True)
    hue_osd50_HDMI = models.CharField('hue_osd50_HDMI', default='',max_length=10,blank=True)
    hue_osd75_HDMI = models.CharField('hue_osd75_HDMI', default='',max_length=10,blank=True)
    hue_osd100_HDMI = models.CharField('hue_osd100_HDMI', default='',max_length=10,blank=True)
    #DTV
    cool_gainr_DTV = models.CharField('cool_gainr_DTV', default='',max_length=10,blank=True)
    normal_gainr_DTV = models.CharField('normal_gainr_DTV', default='',max_length=10,blank=True)
    warm_gainr_DTV = models.CharField('warm_gainr_DTV', default='',max_length=10,blank=True)
    cool_gaing_DTV = models.CharField('cool_gaing_DTV', default='',max_length=10,blank=True)
    normal_gaing_DTV = models.CharField('normal_gaing_DTV', default='',max_length=10,blank=True)
    warm_gaing_DTV = models.CharField('warm_gaing_DTV', default='',max_length=10,blank=True)
    cool_gainb_DTV = models.CharField('cool_gainb_DTV', default='',max_length=10,blank=True)
    normal_gainb_DTV = models.CharField('normal_gainb_DTV', default='',max_length=10,blank=True)
    warm_gainb_DTV = models.CharField('warm_gainb_DTV', default='',max_length=10,blank=True)
    cool_offsetr_DTV = models.CharField('cool_offsetr_DTV', default='',max_length=10,blank=True)
    normal_offsetr_DTV = models.CharField('normal_offsetr_DTV', default='',max_length=10,blank=True)
    warm_offsetr_DTV = models.CharField('warm_offsetr_DTV', default='',max_length=10,blank=True)
    cool_offsetg_DTV = models.CharField('cool_offsetg_DTV', default='',max_length=10,blank=True)
    normal_offsetg_DTV = models.CharField('normal_offsetg_DTV', default='',max_length=10,blank=True)
    warm_offsetg_DTV = models.CharField('warm_offsetg_DTV', default='',max_length=10,blank=True)
    cool_offsetb_DTV = models.CharField('cool_offsetb_DTV', default='',max_length=10,blank=True)
    normal_offsetb_DTV = models.CharField('normal_offsetb_DTV', default='',max_length=10,blank=True)
    warm_offsetb_DTV = models.CharField('warm_offsetb_DTV', default='',max_length=10,blank=True)
    contrast_osd0_DTV = models.CharField('contrast_osd0_DTV', default='',max_length=10,blank=True)
    contrast_osd25_DTV = models.CharField('contrast_osd25_DTV', default='',max_length=10,blank=True)
    contrast_osd50_DTV = models.CharField('contrast_osd50_DTV', default='',max_length=10,blank=True)
    contrast_osd75_DTV = models.CharField('contrast_osd75_DTV', default='',max_length=10,blank=True)
    contrast_osd100_DTV = models.CharField('contrast_osd100_DTV', default='',max_length=10,blank=True)
    brightness_osd0_DTV = models.CharField('brightness_osd0_DTV', default='',max_length=10,blank=True)
    brightness_osd25_DTV = models.CharField('brightness_osd25_DTV', default='',max_length=10,blank=True)
    brightness_osd50_DTV = models.CharField('brightness_osd50_DTV', default='',max_length=10,blank=True)
    brightness_osd75_DTV = models.CharField('brightness_osd75_DTV', default='',max_length=10,blank=True)
    brightness_osd100_DTV = models.CharField('brightness_osd100_DTV', default='',max_length=10,blank=True)
    saturation_osd0_DTV = models.CharField('saturation_osd0_DTV', default='',max_length=10,blank=True)
    saturation_osd25_DTV = models.CharField('saturation_osd25_DTV', default='',max_length=10,blank=True)
    saturation_osd50_DTV = models.CharField('saturation_osd50_DTV', default='',max_length=10,blank=True)
    saturation_osd75_DTV = models.CharField('saturation_osd75_DTV', default='',max_length=10,blank=True)
    saturation_osd100_DTV = models.CharField('saturation_osd100_DTV', default='',max_length=10,blank=True)
    sharpness_osd0_DTV = models.CharField('sharpness_osd0_DTV', default='',max_length=10,blank=True)
    sharpness_osd25_DTV = models.CharField('sharpness_osd25_DTV', default='',max_length=10,blank=True)
    sharpness_osd50_DTV = models.CharField('sharpness_osd50_DTV', default='',max_length=10,blank=True)
    sharpness_osd75_DTV = models.CharField('sharpness_osd75_DTV', default='',max_length=10,blank=True)
    sharpness_osd100_DTV = models.CharField('sharpness_osd100_DTV', default='',max_length=10,blank=True)
    hue_osd0_DTV = models.CharField('hue_osd0_DTV', default='',max_length=10,blank=True)
    hue_osd25_DTV = models.CharField('hue_osd25_DTV', default='',max_length=10,blank=True)
    hue_osd50_DTV = models.CharField('hue_osd50_DTV', default='',max_length=10,blank=True)
    hue_osd75_DTV = models.CharField('hue_osd75_DTV', default='',max_length=10,blank=True)
    hue_osd100_DTV = models.CharField('hue_osd100_DTV', default='',max_length=10,blank=True)
    #DMP
    cool_gainr_DMP = models.CharField('cool_gainr_DMP', default='',max_length=10,blank=True)
    normal_gainr_DMP = models.CharField('normal_gainr_DMP', default='',max_length=10,blank=True)
    warm_gainr_DMP = models.CharField('warm_gainr_DMP', default='',max_length=10,blank=True)
    cool_gaing_DMP = models.CharField('cool_gaing_DMP', default='',max_length=10,blank=True)
    normal_gaing_DMP = models.CharField('normal_gaing_DMP', default='',max_length=10,blank=True)
    warm_gaing_DMP = models.CharField('warm_gaing_DMP', default='',max_length=10,blank=True)
    cool_gainb_DMP = models.CharField('cool_gainb_DMP', default='',max_length=10,blank=True)
    normal_gainb_DMP = models.CharField('normal_gainb_DMP', default='',max_length=10,blank=True)
    warm_gainb_DMP = models.CharField('warm_gainb_DMP', default='',max_length=10,blank=True)
    cool_offsetr_DMP = models.CharField('cool_offsetr_DMP', default='',max_length=10,blank=True)
    normal_offsetr_DMP = models.CharField('normal_offsetr_DMP', default='',max_length=10,blank=True)
    warm_offsetr_DMP = models.CharField('warm_offsetr_DMP', default='',max_length=10,blank=True)
    cool_offsetg_DMP = models.CharField('cool_offsetg_DMP', default='',max_length=10,blank=True)
    normal_offsetg_DMP = models.CharField('normal_offsetg_DMP', default='',max_length=10,blank=True)
    warm_offsetg_DMP = models.CharField('warm_offsetg_DMP', default='',max_length=10,blank=True)
    cool_offsetb_DMP = models.CharField('cool_offsetb_DMP', default='',max_length=10,blank=True)
    normal_offsetb_DMP = models.CharField('normal_offsetb_DMP', default='',max_length=10,blank=True)
    warm_offsetb_DMP = models.CharField('warm_offsetb_DMP', default='',max_length=10,blank=True)
    contrast_osd0_DMP = models.CharField('contrast_osd0_DMP', default='',max_length=10,blank=True)
    contrast_osd25_DMP = models.CharField('contrast_osd25_DMP', default='',max_length=10,blank=True)
    contrast_osd50_DMP = models.CharField('contrast_osd50_DMP', default='',max_length=10,blank=True)
    contrast_osd75_DMP = models.CharField('contrast_osd75_DMP', default='',max_length=10,blank=True)
    contrast_osd100_DMP = models.CharField('contrast_osd100_DMP', default='',max_length=10,blank=True)
    brightness_osd0_DMP = models.CharField('brightness_osd0_DMP', default='',max_length=10,blank=True)
    brightness_osd25_DMP = models.CharField('brightness_osd25_DMP', default='',max_length=10,blank=True)
    brightness_osd50_DMP = models.CharField('brightness_osd50_DMP', default='',max_length=10,blank=True)
    brightness_osd75_DMP = models.CharField('brightness_osd75_DMP', default='',max_length=10,blank=True)
    brightness_osd100_DMP = models.CharField('brightness_osd100_DMP', default='',max_length=10,blank=True)
    saturation_osd0_DMP = models.CharField('saturation_osd0_DMP', default='',max_length=10,blank=True)
    saturation_osd25_DMP = models.CharField('saturation_osd25_DMP', default='',max_length=10,blank=True)
    saturation_osd50_DMP = models.CharField('saturation_osd50_DMP', default='',max_length=10,blank=True)
    saturation_osd75_DMP = models.CharField('saturation_osd75_DMP', default='',max_length=10,blank=True)
    saturation_osd100_DMP = models.CharField('saturation_osd100_DMP', default='',max_length=10,blank=True)
    sharpness_osd0_DMP = models.CharField('sharpness_osd0_DMP', default='',max_length=10,blank=True)
    sharpness_osd25_DMP = models.CharField('sharpness_osd25_DMP', default='',max_length=10,blank=True)
    sharpness_osd50_DMP = models.CharField('sharpness_osd50_DMP', default='',max_length=10,blank=True)
    sharpness_osd75_DMP = models.CharField('sharpness_osd75_DMP', default='',max_length=10,blank=True)
    sharpness_osd100_DMP = models.CharField('sharpness_osd100_DMP', default='',max_length=10,blank=True)
    hue_osd0_DMP = models.CharField('hue_osd0_DMP', default='',max_length=10,blank=True)
    hue_osd25_DMP = models.CharField('hue_osd25_DMP', default='',max_length=10,blank=True)
    hue_osd50_DMP = models.CharField('hue_osd50_DMP', default='',max_length=10,blank=True)
    hue_osd75_DMP = models.CharField('hue_osd75_DMP', default='',max_length=10,blank=True)
    hue_osd100_DMP = models.CharField('hue_osd100_DMP', default='',max_length=10,blank=True)
    #DVD
    cool_gainr_DVD = models.CharField('cool_gainr_DVD', default='',max_length=10,blank=True)
    normal_gainr_DVD = models.CharField('normal_gainr_DVD', default='',max_length=10,blank=True)
    warm_gainr_DVD = models.CharField('warm_gainr_DVD', default='',max_length=10,blank=True)
    cool_gaing_DVD = models.CharField('cool_gaing_DVD', default='',max_length=10,blank=True)
    normal_gaing_DVD = models.CharField('normal_gaing_DVD', default='',max_length=10,blank=True)
    warm_gaing_DVD = models.CharField('warm_gaing_DVD', default='',max_length=10,blank=True)
    cool_gainb_DVD = models.CharField('cool_gainb_DVD', default='',max_length=10,blank=True)
    normal_gainb_DVD = models.CharField('normal_gainb_DVD', default='',max_length=10,blank=True)
    warm_gainb_DVD = models.CharField('warm_gainb_DVD', default='',max_length=10,blank=True)
    cool_offsetr_DVD = models.CharField('cool_offsetr_DVD', default='',max_length=10,blank=True)
    normal_offsetr_DVD = models.CharField('normal_offsetr_DVD', default='',max_length=10,blank=True)
    warm_offsetr_DVD = models.CharField('warm_offsetr_DVD', default='',max_length=10,blank=True)
    cool_offsetg_DVD = models.CharField('cool_offsetg_DVD', default='',max_length=10,blank=True)
    normal_offsetg_DVD = models.CharField('normal_offsetg_DVD', default='',max_length=10,blank=True)
    warm_offsetg_DVD = models.CharField('warm_offsetg_DVD', default='',max_length=10,blank=True)
    cool_offsetb_DVD = models.CharField('cool_offsetb_DVD', default='',max_length=10,blank=True)
    normal_offsetb_DVD = models.CharField('normal_offsetb_DVD', default='',max_length=10,blank=True)
    warm_offsetb_DVD = models.CharField('warm_offsetb_DVD', default='',max_length=10,blank=True)
    contrast_osd0_DVD = models.CharField('contrast_osd0_DVD', default='',max_length=10,blank=True)
    contrast_osd25_DVD = models.CharField('contrast_osd25_DVD', default='',max_length=10,blank=True)
    contrast_osd50_DVD = models.CharField('contrast_osd50_DVD', default='',max_length=10,blank=True)
    contrast_osd75_DVD = models.CharField('contrast_osd75_DVD', default='',max_length=10,blank=True)
    contrast_osd100_DVD = models.CharField('contrast_osd100_DVD', default='',max_length=10,blank=True)
    brightness_osd0_DVD = models.CharField('brightness_osd0_DVD', default='',max_length=10,blank=True)
    brightness_osd25_DVD = models.CharField('brightness_osd25_DVD', default='',max_length=10,blank=True)
    brightness_osd50_DVD = models.CharField('brightness_osd50_DVD', default='',max_length=10,blank=True)
    brightness_osd75_DVD = models.CharField('brightness_osd75_DVD', default='',max_length=10,blank=True)
    brightness_osd100_DVD = models.CharField('brightness_osd100_DVD', default='',max_length=10,blank=True)
    saturation_osd0_DVD = models.CharField('saturation_osd0_DVD', default='',max_length=10,blank=True)
    saturation_osd25_DVD = models.CharField('saturation_osd25_DVD', default='',max_length=10,blank=True)
    saturation_osd50_DVD = models.CharField('saturation_osd50_DVD', default='',max_length=10,blank=True)
    saturation_osd75_DVD = models.CharField('saturation_osd75_DVD', default='',max_length=10,blank=True)
    saturation_osd100_DVD = models.CharField('saturation_osd100_DVD', default='',max_length=10,blank=True)
    sharpness_osd0_DVD = models.CharField('sharpness_osd0_DVD', default='',max_length=10,blank=True)
    sharpness_osd25_DVD = models.CharField('sharpness_osd25_DVD', default='',max_length=10,blank=True)
    sharpness_osd50_DVD = models.CharField('sharpness_osd50_DVD', default='',max_length=10,blank=True)
    sharpness_osd75_DVD = models.CharField('sharpness_osd75_DVD', default='',max_length=10,blank=True)
    sharpness_osd100_DVD = models.CharField('sharpness_osd100_DVD', default='',max_length=10,blank=True)
    hue_osd0_DVD = models.CharField('hue_osd0_DVD', default='',max_length=10,blank=True)
    hue_osd25_DVD = models.CharField('hue_osd25_DVD', default='',max_length=10,blank=True)
    hue_osd50_DVD = models.CharField('hue_osd50_DVD', default='',max_length=10,blank=True)
    hue_osd75_DVD = models.CharField('hue_osd75_DVD', default='',max_length=10,blank=True)
    hue_osd100_DVD = models.CharField('hue_osd100_DVD', default='',max_length=10,blank=True)
    #SCART
    cool_gainr_SCART = models.CharField('cool_gainr_SCART', default='',max_length=10,blank=True)
    normal_gainr_SCART = models.CharField('normal_gainr_SCART', default='',max_length=10,blank=True)
    warm_gainr_SCART = models.CharField('warm_gainr_SCART', default='',max_length=10,blank=True)
    cool_gaing_SCART = models.CharField('cool_gaing_SCART', default='',max_length=10,blank=True)
    normal_gaing_SCART = models.CharField('normal_gaing_SCART', default='',max_length=10,blank=True)
    warm_gaing_SCART = models.CharField('warm_gaing_SCART', default='',max_length=10,blank=True)
    cool_gainb_SCART = models.CharField('cool_gainb_SCART', default='',max_length=10,blank=True)
    normal_gainb_SCART = models.CharField('normal_gainb_SCART', default='',max_length=10,blank=True)
    warm_gainb_SCART = models.CharField('warm_gainb_SCART', default='',max_length=10,blank=True)
    cool_offsetr_SCART = models.CharField('cool_offsetr_SCART', default='',max_length=10,blank=True)
    normal_offsetr_SCART = models.CharField('normal_offsetr_SCART', default='',max_length=10,blank=True)
    warm_offsetr_SCART = models.CharField('warm_offsetr_SCART', default='',max_length=10,blank=True)
    cool_offsetg_SCART = models.CharField('cool_offsetg_SCART', default='',max_length=10,blank=True)
    normal_offsetg_SCART = models.CharField('normal_offsetg_SCART', default='',max_length=10,blank=True)
    warm_offsetg_SCART = models.CharField('warm_offsetg_SCART', default='',max_length=10,blank=True)
    cool_offsetb_SCART = models.CharField('cool_offsetb_SCART', default='',max_length=10,blank=True)
    normal_offsetb_SCART = models.CharField('normal_offsetb_SCART', default='',max_length=10,blank=True)
    warm_offsetb_SCART = models.CharField('warm_offsetb_SCART', default='',max_length=10,blank=True)
    contrast_osd0_SCART = models.CharField('contrast_osd0_SCART', default='',max_length=10,blank=True)
    contrast_osd25_SCART = models.CharField('contrast_osd25_SCART', default='',max_length=10,blank=True)
    contrast_osd50_SCART = models.CharField('contrast_osd50_SCART', default='',max_length=10,blank=True)
    contrast_osd75_SCART = models.CharField('contrast_osd75_SCART', default='',max_length=10,blank=True)
    contrast_osd100_SCART = models.CharField('contrast_osd100_SCART', default='',max_length=10,blank=True)
    brightness_osd0_SCART = models.CharField('brightness_osd0_SCART', default='',max_length=10,blank=True)
    brightness_osd25_SCART = models.CharField('brightness_osd25_SCART', default='',max_length=10,blank=True)
    brightness_osd50_SCART = models.CharField('brightness_osd50_SCART', default='',max_length=10,blank=True)
    brightness_osd75_SCART = models.CharField('brightness_osd75_SCART', default='',max_length=10,blank=True)
    brightness_osd100_SCART = models.CharField('brightness_osd100_SCART', default='',max_length=10,blank=True)
    saturation_osd0_SCART = models.CharField('saturation_osd0_SCART', default='',max_length=10,blank=True)
    saturation_osd25_SCART = models.CharField('saturation_osd25_SCART', default='',max_length=10,blank=True)
    saturation_osd50_SCART = models.CharField('saturation_osd50_SCART', default='',max_length=10,blank=True)
    saturation_osd75_SCART = models.CharField('saturation_osd75_SCART', default='',max_length=10,blank=True)
    saturation_osd100_SCART = models.CharField('saturation_osd100_SCART', default='',max_length=10,blank=True)
    sharpness_osd0_SCART = models.CharField('sharpness_osd0_SCART', default='',max_length=10,blank=True)
    sharpness_osd25_SCART = models.CharField('sharpness_osd25_SCART', default='',max_length=10,blank=True)
    sharpness_osd50_SCART = models.CharField('sharpness_osd50_SCART', default='',max_length=10,blank=True)
    sharpness_osd75_SCART = models.CharField('sharpness_osd75_SCART', default='',max_length=10,blank=True)
    sharpness_osd100_SCART = models.CharField('sharpness_osd100_SCART', default='',max_length=10,blank=True)
    hue_osd0_SCART = models.CharField('hue_osd0_SCART', default='',max_length=10,blank=True)
    hue_osd25_SCART = models.CharField('hue_osd25_SCART', default='',max_length=10,blank=True)
    hue_osd50_SCART = models.CharField('hue_osd50_SCART', default='',max_length=10,blank=True)
    hue_osd75_SCART = models.CharField('hue_osd75_SCART', default='',max_length=10,blank=True)
    hue_osd100_SCART = models.CharField('hue_osd100_SCART', default='',max_length=10,blank=True)
    #SVIDEO
    cool_gainr_SVIDEO = models.CharField('cool_gainr_SVIDEO', default='',max_length=10,blank=True)
    normal_gainr_SVIDEO = models.CharField('normal_gainr_SVIDEO', default='',max_length=10,blank=True)
    warm_gainr_SVIDEO = models.CharField('warm_gainr_SVIDEO', default='',max_length=10,blank=True)
    cool_gaing_SVIDEO = models.CharField('cool_gaing_SVIDEO', default='',max_length=10,blank=True)
    normal_gaing_SVIDEO = models.CharField('normal_gaing_SVIDEO', default='',max_length=10,blank=True)
    warm_gaing_SVIDEO = models.CharField('warm_gaing_SVIDEO', default='',max_length=10,blank=True)
    cool_gainb_SVIDEO = models.CharField('cool_gainb_SVIDEO', default='',max_length=10,blank=True)
    normal_gainb_SVIDEO = models.CharField('normal_gainb_SVIDEO', default='',max_length=10,blank=True)
    warm_gainb_SVIDEO = models.CharField('warm_gainb_SVIDEO', default='',max_length=10,blank=True)
    cool_offsetr_SVIDEO = models.CharField('cool_offsetr_SVIDEO', default='',max_length=10,blank=True)
    normal_offsetr_SVIDEO = models.CharField('normal_offsetr_SVIDEO', default='',max_length=10,blank=True)
    warm_offsetr_SVIDEO = models.CharField('warm_offsetr_SVIDEO', default='',max_length=10,blank=True)
    cool_offsetg_SVIDEO = models.CharField('cool_offsetg_SVIDEO', default='',max_length=10,blank=True)
    normal_offsetg_SVIDEO = models.CharField('normal_offsetg_SVIDEO', default='',max_length=10,blank=True)
    warm_offsetg_SVIDEO = models.CharField('warm_offsetg_SVIDEO', default='',max_length=10,blank=True)
    cool_offsetb_SVIDEO = models.CharField('cool_offsetb_SVIDEO', default='',max_length=10,blank=True)
    normal_offsetb_SVIDEO = models.CharField('normal_offsetb_SVIDEO', default='',max_length=10,blank=True)
    warm_offsetb_SVIDEO = models.CharField('warm_offsetb_SVIDEO', default='',max_length=10,blank=True)
    contrast_osd0_SVIDEO = models.CharField('contrast_osd0_SVIDEO', default='',max_length=10,blank=True)
    contrast_osd25_SVIDEO = models.CharField('contrast_osd25_SVIDEO', default='',max_length=10,blank=True)
    contrast_osd50_SVIDEO = models.CharField('contrast_osd50_SVIDEO', default='',max_length=10,blank=True)
    contrast_osd75_SVIDEO = models.CharField('contrast_osd75_SVIDEO', default='',max_length=10,blank=True)
    contrast_osd100_SVIDEO = models.CharField('contrast_osd100_SVIDEO', default='',max_length=10,blank=True)
    brightness_osd0_SVIDEO = models.CharField('brightness_osd0_SVIDEO', default='',max_length=10,blank=True)
    brightness_osd25_SVIDEO = models.CharField('brightness_osd25_SVIDEO', default='',max_length=10,blank=True)
    brightness_osd50_SVIDEO = models.CharField('brightness_osd50_SVIDEO', default='',max_length=10,blank=True)
    brightness_osd75_SVIDEO = models.CharField('brightness_osd75_SVIDEO', default='',max_length=10,blank=True)
    brightness_osd100_SVIDEO = models.CharField('brightness_osd100_SVIDEO', default='',max_length=10,blank=True)
    saturation_osd0_SVIDEO = models.CharField('saturation_osd0_SVIDEO', default='',max_length=10,blank=True)
    saturation_osd25_SVIDEO = models.CharField('saturation_osd25_SVIDEO', default='',max_length=10,blank=True)
    saturation_osd50_SVIDEO = models.CharField('saturation_osd50_SVIDEO', default='',max_length=10,blank=True)
    saturation_osd75_SVIDEO = models.CharField('saturation_osd75_SVIDEO', default='',max_length=10,blank=True)
    saturation_osd100_SVIDEO = models.CharField('saturation_osd100_SVIDEO', default='',max_length=10,blank=True)
    sharpness_osd0_SVIDEO = models.CharField('sharpness_osd0_SVIDEO', default='',max_length=10,blank=True)
    sharpness_osd25_SVIDEO = models.CharField('sharpness_osd25_SVIDEO', default='',max_length=10,blank=True)
    sharpness_osd50_SVIDEO = models.CharField('sharpness_osd50_SVIDEO', default='',max_length=10,blank=True)
    sharpness_osd75_SVIDEO = models.CharField('sharpness_osd75_SVIDEO', default='',max_length=10,blank=True)
    sharpness_osd100_SVIDEO = models.CharField('sharpness_osd100_SVIDEO', default='',max_length=10,blank=True)
    hue_osd0_SVIDEO = models.CharField('hue_osd0_SVIDEO', default='',max_length=10,blank=True)
    hue_osd25_SVIDEO = models.CharField('hue_osd25_SVIDEO', default='',max_length=10,blank=True)
    hue_osd50_SVIDEO = models.CharField('hue_osd50_SVIDEO', default='',max_length=10,blank=True)
    hue_osd75_SVIDEO = models.CharField('hue_osd75_SVIDEO', default='',max_length=10,blank=True)
    hue_osd100_SVIDEO = models.CharField('hue_osd100_SVIDEO', default='',max_length=10,blank=True)
    #QMAPAEWRITE
    icc_r = models.CharField('icc_r', default='',max_length=10,blank=True)
    ibc_r = models.CharField('ibc_r', default='',max_length=10,blank=True)
    ihc_r = models.CharField('ihc_r', default='',max_length=10,blank=True)
    icc_g = models.CharField('icc_g', default='',max_length=10,blank=True)
    ibc_g = models.CharField('ibc_g', default='',max_length=10,blank=True)
    ihc_g = models.CharField('ihc_g', default='',max_length=10,blank=True)
    icc_b = models.CharField('icc_b', default='',max_length=10,blank=True)
    ibc_b = models.CharField('ibc_b', default='',max_length=10,blank=True)
    ihc_b = models.CharField('ihc_b', default='',max_length=10,blank=True)
    icc_c = models.CharField('icc_c', default='',max_length=10,blank=True)
    ibc_c = models.CharField('ibc_c', default='',max_length=10,blank=True)
    ihc_c = models.CharField('ihc_c', default='',max_length=10,blank=True)
    icc_m = models.CharField('icc_m', default='',max_length=10,blank=True)
    ibc_m = models.CharField('ibc_m', default='',max_length=10,blank=True)
    ihc_m = models.CharField('ihc_m', default='',max_length=10,blank=True)
    icc_y = models.CharField('icc_y', default='',max_length=10,blank=True)
    ibc_y = models.CharField('ibc_y', default='',max_length=10,blank=True)
    ihc_y = models.CharField('ihc_y', default='',max_length=10,blank=True)
    icc_f = models.CharField('icc_f', default='',max_length=10,blank=True)
    ibc_f = models.CharField('ibc_f', default='',max_length=10,blank=True)
    ihc_f = models.CharField('ihc_f', default='',max_length=10,blank=True)
    
    def __unicode__(self):
        return str(self.id)
    class Meta:
        verbose_name = '项目PQ'
        verbose_name_plural = '项目PQ'
    
class CloudProject(models.Model):

    Author = models.ForeignKey(User)
    projectTime   = models.CharField('项目时间',default='',max_length=256)
    project_flag = models.CharField('project_flag',default='',max_length=256)
    checksum = models.CharField('checksum',default='',max_length=256,blank=True)
    build_status = models.CharField('编译状态',default='0',max_length=256,blank=True)
    #--------------------------------------------------------------------------
    board_type = models.CharField('板型名称', default='',max_length=256,blank=True)
    tv_system = models.CharField('TV制式', default='',max_length=20,blank=True)
    power_on_mode = models.CharField('上电模式', default='',max_length=20,blank=True)
    language = models.CharField('语言', default='',max_length=256,blank=True)
    default_language = models.CharField('默认语言', default='',max_length=20,blank=True)
    mirro_panel = models.CharField('倒屏', default='',max_length=10,blank=True)
    logo = models.FileField('LOGO', upload_to = './upload/logo/')
    logo_name = models.CharField('LOGO名字',default='',max_length=256,blank=True)
    logo_enable = models.CharField('LOGO开关', default='',max_length=10,blank=True)
    no_signal_blue = models.CharField('无信号蓝屏', default='',max_length=10,blank=True)
    free_panel = models.CharField('切台冻结', default='',max_length=10,blank=True)
    default_backlight = models.CharField('默认背光值', default='',max_length=10,blank=True)
    game = models.CharField('游戏开关', default='',max_length=10,blank=True)
    new_menu = models.CharField('新菜单', default='',max_length=10,blank=True)
    tow_u_copy = models.CharField('双U互拷', default='',max_length=10,blank=True)
    usb_last_memory = models.CharField('USB断电记忆', default='',max_length=10,blank=True)
    show_power = models.CharField('电量显示', default='',max_length=10,blank=True)
    dmp_show = models.CharField('多媒体显示USB', default='',max_length=10,blank=True)
    project_file = models.FileField('编译文件',max_length=256,blank=True)
    notes = models.CharField('备注',max_length=256,blank=True)
    pq_name   = models.ForeignKey(ProPQ)
    panel_name = models.ForeignKey(ProPanel)
    keypad_name = models.ForeignKey(ProKeypad)
    second_remote = models.ForeignKey(ProRemote2)
    frist_remote = models.ForeignKey(ProRemote1)
    compile_err = models.CharField('错误信息',max_length=256,blank=True)
    
    def __unicode__(self):
        return str(self.id)
    class Meta:
        verbose_name = '项目'
        verbose_name_plural = '项目配置'

class CloudPanel(models.Model):
    Author = models.ForeignKey(User)
    PanelTime   = models.CharField('创建时间',default='',max_length=256)

    panel_name = models.CharField('屏参名称', default='',max_length=256,blank=True)
    panel_dual_port = models.CharField('双屏线接口', default='',max_length=10,blank=True)
    panel_double_clock = models.CharField('双时钟信号', default='',max_length=10,blank=True)
    panel_swap_port = models.CharField('信号奇偶反', default='',max_length=10,blank=True)
    panel_swap_odd_ml = models.CharField('奇信号高低反', default='',max_length=10,blank=True)
    panel_swap_even_ml = models.CharField('偶信号高低反', default='',max_length=10,blank=True)
    panel_swap_odd_rb = models.CharField('奇信号红蓝反', default='',max_length=10,blank=True)
    panel_swap_even_rb = models.CharField('偶信号红蓝反', default='',max_length=10,blank=True)
    panel_swap_odd_rg = models.CharField('奇信号红绿反', default='',max_length=10,blank=True)
    panel_swap_even_rg = models.CharField('偶信号红绿反', default='',max_length=10,blank=True)
    panel_swap_odd_gb = models.CharField('奇信号绿蓝反', default='',max_length=10,blank=True)
    panel_swap_even_gb = models.CharField('偶信号绿蓝反', default='',max_length=10,blank=True)
    panel_map = models.CharField('屏位数', default='',max_length=10,blank=True)
    panel_on_timing1 = models.CharField('驱屏信号到电压时间', default='',max_length=10,blank=True)
    panel_on_timing2 = models.CharField('背光延时时间', default='',max_length=10,blank=True)
    panel_hsync_width = models.CharField('行宽度', default='',max_length=10,blank=True)
    panel_hsync_back_porch = models.CharField('行起始', default='',max_length=10,blank=True)
    panel_vsync_width = models.CharField('场宽度', default='',max_length=10,blank=True)
    panel_vsync_back_porch = models.CharField('场起始', default='',max_length=10,blank=True)
    panel_width_define = models.CharField('行物理分辨率', default='',max_length=10,blank=True)
    panel_height_define = models.CharField('场物理分辨率', default='',max_length=10,blank=True)
    panel_max_htotal = models.CharField('行最大值', default='',max_length=10,blank=True)
    panel_htotal = models.CharField('行默认值', default='',max_length=10,blank=True)
    panel_min_htotal = models.CharField('行最小值', default='',max_length=10,blank=True)
    panel_max_vtotal = models.CharField('场最大值', default='',max_length=10,blank=True)
    panel_vtotal = models.CharField('场默认值', default='',max_length=10,blank=True)
    panel_min_vtotal = models.CharField('场最小值', default='',max_length=10,blank=True)
    panel_out_timing_mode = models.CharField('变换模式', default='',max_length=50,blank=True)
    enable_black_white_change = models.CharField('黑白反', default='',max_length=10,blank=True)
    panel_enable_60hz = models.CharField('60HZ', default='',max_length=10,blank=True)

    def __unicode__(self):
        return self.panel_name 
    class Meta:
        verbose_name = '屏参'
        verbose_name_plural = '屏参配置'
        
class CloudKeypad(models.Model):
    Author = models.ForeignKey(User)
    KeypadTime   = models.CharField('创建时间',default='',max_length=256)

    keypad_name = models.CharField('按键名称', default='',max_length=256,blank=True)
    keypad_is_5key_mode = models.CharField('是否开启五键模式', default='',max_length=10,blank=True)
    keypad_k0 = models.CharField('按键k0', default='',max_length=10,blank=True)
    keypad_k1 = models.CharField('按键k1', default='',max_length=10,blank=True)
    keypad_k2 = models.CharField('按键k2', default='',max_length=10,blank=True)
    keypad_k3 = models.CharField('按键k3', default='',max_length=10,blank=True)
    keypad_k4 = models.CharField('按键k4', default='',max_length=10,blank=True)
    keypad_k5 = models.CharField('按键k5', default='',max_length=10,blank=True)
    keypad_k6 = models.CharField('按键k6', default='',max_length=10,blank=True)


    def __unicode__(self):
        return self.keypad_name
    class Meta:
        verbose_name = '按键'
        verbose_name_plural = '按键配置'    

class CloudIR(models.Model):
    Author = models.ForeignKey(User)
    IRTime   = models.CharField('创建时间',default='',max_length=256)


    remote_name = models.CharField('遥控名称', default='',max_length=256,blank=True)
    remote_head_code = models.CharField('遥控头码', default='',max_length=10,blank=True)
    remote_header_code_time = models.CharField('遥控头码时间', default='9000',max_length=10,blank=True)
    remote_power = models.CharField('遥控power', default='',max_length=10,blank=True)
    remote_mute = models.CharField('遥控mute', default='',max_length=10,blank=True)
    remote_num_1 = models.CharField('遥控num1', default='',max_length=10,blank=True)
    remote_num_2 = models.CharField('遥控num2', default='',max_length=10,blank=True)
    remote_num_3 = models.CharField('遥控num3', default='',max_length=10,blank=True)
    remote_num_4 = models.CharField('遥控num4', default='',max_length=10,blank=True)
    remote_num_5 = models.CharField('遥控num5', default='',max_length=10,blank=True)
    remote_num_6 = models.CharField('遥控num6', default='',max_length=10,blank=True)
    remote_num_7 = models.CharField('遥控num7', default='',max_length=10,blank=True)
    remote_num_8 = models.CharField('遥控num8', default='',max_length=10,blank=True)
    remote_num_9 = models.CharField('遥控num9 ', default='',max_length=10,blank=True)
    remote_num_0 = models.CharField('遥控num0', default='',max_length=10,blank=True)
    remote_dash = models.CharField('遥控dash', default='',max_length=10,blank=True)
    remote_channel_return = models.CharField('遥控return', default='',max_length=10,blank=True)
    remote_sleep = models.CharField('遥控sleep', default='',max_length=10,blank=True)
    remote_pc = models.CharField('遥控vga', default='',max_length=10,blank=True)
    remote_hdmi = models.CharField('遥控hdmi', default='',max_length=10,blank=True)
    remote_volume_plus = models.CharField('遥控vol_plus', default='',max_length=10,blank=True)
    remote_volume_minus = models.CharField('遥控vol_minus', default='',max_length=10,blank=True)
    remote_channel_plus = models.CharField('遥控chl_plus', default='',max_length=10,blank=True)
    remote_channel_minus = models.CharField('遥控chl_minus', default='',max_length=10,blank=True)
    remote_input_source = models.CharField('遥控source', default='',max_length=10,blank=True)
    remote_info = models.CharField('遥控info', default='',max_length=10,blank=True)
    remote_zoom = models.CharField('遥控zoom', default='',max_length=10,blank=True)
    remote_up = models.CharField('遥控up', default='',max_length=10,blank=True)
    remote_down = models.CharField('遥控down', default='',max_length=10,blank=True)
    remote_right = models.CharField('遥控right', default='',max_length=10,blank=True)
    remote_left = models.CharField('遥控left', default='',max_length=10,blank=True)
    remote_select = models.CharField('遥控select', default='',max_length=10,blank=True)
    remote_menu= models.CharField('遥控menu', default='',max_length=10,blank=True)
    remote_exit = models.CharField('遥控exit', default='',max_length=10,blank=True)
    remote_autoadjust = models.CharField('遥控auto', default='',max_length=10,blank=True)
    #
    remote_previous =models.CharField('上一首(PREVIOUS)', default='',max_length=10,blank=True)
    remote_next =models.CharField('下一首(NEXT)', default='',max_length=10,blank=True)
    remote_forward =models.CharField('快进(FORWARD)', default='',max_length=10,blank=True)
    remote_backward =models.CharField('快退(BACKWARD)', default='',max_length=10,blank=True)
    remote_pic =models.CharField('图像(PICTURE)', default='',max_length=10,blank=True)
    remote_audio =models.CharField('声音(AUDIO)', default='',max_length=10,blank=True)
    remote_play =models.CharField('播放(PLAY)', default='',max_length=10,blank=True)
    remote_stop =models.CharField('停止(STOP)', default='',max_length=10,blank=True)
    remote_red =models.CharField('红(RED)', default='',max_length=10,blank=True)
    remote_yellow =models.CharField('黄(YELLOW)', default='',max_length=10,blank=True)
    remote_blue = models.CharField('蓝(BULE)', default='',max_length=10,blank=True)
    remote_green =models.CharField('绿(GREEN)', default='',max_length=10,blank=True)
    #复用遥控
    remote_combine_red =models.CharField('复用红(RED)', default='',max_length=10,blank=True)
    remote_combine_yellow =models.CharField('复用黄(YELLOW)', default='',max_length=10,blank=True)
    remote_combine_blue = models.CharField('复用蓝(BULE)', default='',max_length=10,blank=True)
    remote_combine_green =models.CharField('复用绿(GREEN)', default='',max_length=10,blank=True)
    remote_volume_use_as_leftright = models.CharField('复用音量', default='',max_length=10,blank=True)
    remote_channel_use_as_updown = models.CharField('复用频道+', default='',max_length=10,blank=True)
    #不常用遥控
    remote_component = models.CharField('分量(COMPONENT)', default='',max_length=10,blank=True)
    remote_Dmp_Port = models.CharField('多媒体(DMP PORT)', default='',max_length=10,blank=True)
    remote_tv = models.CharField('电视(TV)', default='',max_length=10,blank=True)
    remote_scart = models.CharField('SCART1', default='',max_length=10,blank=True)
    remote_dmp = models.CharField('DMP', default='',max_length=10,blank=True)
    remote_subtitle = models.CharField('字幕(SUBTITLE)', default='',max_length=10,blank=True)
    remote_av = models.CharField('视频(AV1)', default='',max_length=10,blank=True)
    remote_av1 = models.CharField('AV2', default='',max_length=10,blank=True)
    remote_av2 = models.CharField('AV3', default='',max_length=10,blank=True)
    remote_zoomin = models.CharField('放大(ZOOM IN)', default='',max_length=10,blank=True)
    remote_zommout = models.CharField('缩小(ZOOM OUT)', default='',max_length=10,blank=True)
    remote_freeze = models.CharField('镜像(FREEZE)', default='',max_length=10,blank=True)
    remote_hdmi1 = models.CharField('HDMI2', default='',max_length=10,blank=True)
    remote_hdmi2 = models.CharField('HDMI3', default='',max_length=10,blank=True)
    remote_hdmi3 = models.CharField('HDMI4', default='',max_length=10,blank=True)
    remote_loop = models.CharField('循环(LOOP)', default='',max_length=10,blank=True)
    remote_playlist = models.CharField('播放列表(PLAYLIST)', default='',max_length=10,blank=True)
    remote_channel_fav_list = models.CharField('爱列表(CHANNEL FAV LIST)', default='',max_length=10,blank=True)
    remote_music = models.CharField('音乐(MUSIC)', default='',max_length=10,blank=True)
    remote_channel_list = models.CharField('节目表(CHANNEL LIST)', default='',max_length=10,blank=True)
    remote_record = models.CharField('刻录(RECORD)', default='',max_length=10,blank=True)
    remote_mts = models.CharField('丽音(MTS)', default='',max_length=10,blank=True)
    remote_cc = models.CharField('CC', default='',max_length=10,blank=True)
    remote_page_up = models.CharField('PAGE UP', default='',max_length=10,blank=True)
    remote_page_down = models.CharField('PAGE DOWN', default='',max_length=10,blank=True)
    remote_mix = models.CharField('MIX', default='',max_length=10,blank=True)
    remote_index = models.CharField('INDEX', default='',max_length=10,blank=True)
    remote_tv_input = models.CharField('TV INPUT', default='',max_length=10,blank=True)
    remote_channel_fav_plus = models.CharField('CHANNE FAV PLUS', default='',max_length=10,blank=True)
    remote_channel_fav_minus = models.CharField('CHANNEL FAV MINUS', default='',max_length=10,blank=True)
    remote_ab = models.CharField('AB', default='',max_length=10,blank=True)
    remote_tv_radio = models.CharField('TV RADIO', default='',max_length=10,blank=True)
    remote_factory_reste = models.CharField('FACTORY RESTE', default='',max_length=10,blank=True)
    remote_rotate_angle = models.CharField('ROTATE ANGLE', default='',max_length=10,blank=True)
    remote_goto = models.CharField('GOTO', default='',max_length=10,blank=True)
    remote_search_channel = models.CharField('SEARCH CHANNEL', default='',max_length=10,blank=True)
    remote_epg = models.CharField('EPG', default='',max_length=10,blank=True)
    remote_update = models.CharField('UPDATE', default='',max_length=10,blank=True)
    remote_ttx_mode = models.CharField('TTX MODE', default='',max_length=10,blank=True)
    remote_clock = models.CharField('CLOCK', default='',max_length=10,blank=True)
    remote_ttx = models.CharField('TTX', default='',max_length=10,blank=True)
    remote_size = models.CharField('SIZE', default='',max_length=10,blank=True)
    remote_hold = models.CharField('HOLD', default='',max_length=10,blank=True)
    remote_adjust = models.CharField('自动调整(ADJUST)', default='',max_length=10,blank=True)
    remote_key_disable_keypad = models.CharField('KEY DISABLE KEYPAD', default='',max_length=10,blank=True)
    remote_audio_track = models.CharField('AUDIO TRACK', default='',max_length=10,blank=True)
    remote_slow = models.CharField('慢放(SLOW)', default='',max_length=10,blank=True)
    remote_pause = models.CharField('暂停(PAUSE)', default='',max_length=10,blank=True)
    remote_subpage = models.CharField('SUBPAGE', default='',max_length=10,blank=True)
    remote_sv = models.CharField('SV', default='',max_length=10,blank=True)
    remote_aging = models.CharField('老化(AGING)', default='',max_length=10,blank=True)
    remote_step = models.CharField('STEP', default='',max_length=10,blank=True)
    remote_combine_key = models.CharField('COMBINE KEY', default='',max_length=10,blank=True)
    remote_reveal = models.CharField('REVEAL', default='',max_length=10,blank=True)
    
    def __unicode__(self):
        return self.remote_name
    class Meta:
        verbose_name = '遥控'
        verbose_name_plural = '遥控配置'

class CloudPQ(models.Model):
    Author = models.ForeignKey(User)
    PQTime   = models.CharField('创建时间',default='',max_length=256)

    pq_name   = models.CharField('pq_name', default='',max_length=256)
    #VGA
    cool_gainr_VGA = models.CharField('cool_gainr_VGA', default='',max_length=10,blank=True)
    normal_gainr_VGA = models.CharField('normal_gainr_VGA', default='',max_length=10,blank=True)
    warm_gainr_VGA = models.CharField('warm_gainr_VGA', default='',max_length=10,blank=True)
    cool_gaing_VGA = models.CharField('cool_gaing_VGA', default='',max_length=10,blank=True)
    normal_gaing_VGA = models.CharField('normal_gaing_VGA', default='',max_length=10,blank=True)
    warm_gaing_VGA = models.CharField('warm_gaing_VGA', default='',max_length=10,blank=True)
    cool_gainb_VGA = models.CharField('cool_gainb_VGA', default='',max_length=10,blank=True)
    normal_gainb_VGA = models.CharField('normal_gainb_VGA', default='',max_length=10,blank=True)
    warm_gainb_VGA = models.CharField('warm_gainb_VGA', default='',max_length=10,blank=True)
    cool_offsetr_VGA = models.CharField('cool_offsetr_VGA', default='',max_length=10,blank=True)
    normal_offsetr_VGA = models.CharField('normal_offsetr_VGA', default='',max_length=10,blank=True)
    warm_offsetr_VGA = models.CharField('warm_offsetr_VGA', default='',max_length=10,blank=True)
    cool_offsetg_VGA = models.CharField('cool_offsetg_VGA', default='',max_length=10,blank=True)
    normal_offsetg_VGA = models.CharField('normal_offsetg_VGA', default='',max_length=10,blank=True)
    warm_offsetg_VGA = models.CharField('warm_offsetg_VGA', default='',max_length=10,blank=True)
    cool_offsetb_VGA = models.CharField('cool_offsetb_VGA', default='',max_length=10,blank=True)
    normal_offsetb_VGA = models.CharField('normal_offsetb_VGA', default='',max_length=10,blank=True)
    warm_offsetb_VGA = models.CharField('warm_offsetb_VGA', default='',max_length=10,blank=True)
    contrast_osd0_VGA = models.CharField('contrast_osd0_VGA', default='',max_length=10,blank=True)
    contrast_osd25_VGA = models.CharField('contrast_osd25_VGA', default='',max_length=10,blank=True)
    contrast_osd50_VGA = models.CharField('contrast_osd50_VGA', default='',max_length=10,blank=True)
    contrast_osd75_VGA = models.CharField('contrast_osd75_VGA', default='',max_length=10,blank=True)
    contrast_osd100_VGA = models.CharField('contrast_osd100_VGA', default='',max_length=10,blank=True)
    brightness_osd0_VGA = models.CharField('brightness_osd0_VGA', default='',max_length=10,blank=True)
    brightness_osd25_VGA = models.CharField('brightness_osd25_VGA', default='',max_length=10,blank=True)
    brightness_osd50_VGA = models.CharField('brightness_osd50_VGA', default='',max_length=10,blank=True)
    brightness_osd75_VGA = models.CharField('brightness_osd75_VGA', default='',max_length=10,blank=True)
    brightness_osd100_VGA = models.CharField('brightness_osd100_VGA', default='',max_length=10,blank=True)
    saturation_osd0_VGA = models.CharField('saturation_osd0_VGA', default='',max_length=10,blank=True)
    saturation_osd25_VGA = models.CharField('saturation_osd25_VGA', default='',max_length=10,blank=True)
    saturation_osd50_VGA = models.CharField('saturation_osd50_VGA', default='',max_length=10,blank=True)
    saturation_osd75_VGA = models.CharField('saturation_osd75_VGA', default='',max_length=10,blank=True)
    saturation_osd100_VGA = models.CharField('saturation_osd100_VGA', default='',max_length=10,blank=True)
    sharpness_osd0_VGA = models.CharField('sharpness_osd0_VGA', default='',max_length=10,blank=True)
    sharpness_osd25_VGA = models.CharField('sharpness_osd25_VGA', default='',max_length=10,blank=True)
    sharpness_osd50_VGA = models.CharField('sharpness_osd50_VGA', default='',max_length=10,blank=True)
    sharpness_osd75_VGA = models.CharField('sharpness_osd75_VGA', default='',max_length=10,blank=True)
    sharpness_osd100_VGA = models.CharField('sharpness_osd100_VGA', default='',max_length=10,blank=True)
    hue_osd0_VGA = models.CharField('hue_osd0_VGA', default='',max_length=10,blank=True)
    hue_osd25_VGA = models.CharField('hue_osd25_VGA', default='',max_length=10,blank=True)
    hue_osd50_VGA = models.CharField('hue_osd50_VGA', default='',max_length=10,blank=True)
    hue_osd75_VGA = models.CharField('hue_osd75_VGA', default='',max_length=10,blank=True)
    hue_osd100_VGA = models.CharField('hue_osd100_VGA', default='',max_length=10,blank=True)
    #ATV
    cool_gainr_ATV = models.CharField('cool_gainr_ATV', default='',max_length=10,blank=True)
    normal_gainr_ATV = models.CharField('normal_gainr_ATV', default='',max_length=10,blank=True)
    warm_gainr_ATV = models.CharField('warm_gainr_ATV', default='',max_length=10,blank=True)
    cool_gaing_ATV = models.CharField('cool_gaing_ATV', default='',max_length=10,blank=True)
    normal_gaing_ATV = models.CharField('normal_gaing_ATV', default='',max_length=10,blank=True)
    warm_gaing_ATV = models.CharField('warm_gaing_ATV', default='',max_length=10,blank=True)
    cool_gainb_ATV = models.CharField('cool_gainb_ATV', default='',max_length=10,blank=True)
    normal_gainb_ATV = models.CharField('normal_gainb_ATV', default='',max_length=10,blank=True)
    warm_gainb_ATV = models.CharField('warm_gainb_ATV', default='',max_length=10,blank=True)
    cool_offsetr_ATV = models.CharField('cool_offsetr_ATV', default='',max_length=10,blank=True)
    normal_offsetr_ATV = models.CharField('normal_offsetr_ATV', default='',max_length=10,blank=True)
    warm_offsetr_ATV = models.CharField('warm_offsetr_ATV', default='',max_length=10,blank=True)
    cool_offsetg_ATV = models.CharField('cool_offsetg_ATV', default='',max_length=10,blank=True)
    normal_offsetg_ATV = models.CharField('normal_offsetg_ATV', default='',max_length=10,blank=True)
    warm_offsetg_ATV = models.CharField('warm_offsetg_ATV', default='',max_length=10,blank=True)
    cool_offsetb_ATV = models.CharField('cool_offsetb_ATV', default='',max_length=10,blank=True)
    normal_offsetb_ATV = models.CharField('normal_offsetb_ATV', default='',max_length=10,blank=True)
    warm_offsetb_ATV = models.CharField('warm_offsetb_ATV', default='',max_length=10,blank=True)
    contrast_osd0_ATV = models.CharField('contrast_osd0_ATV', default='',max_length=10,blank=True)
    contrast_osd25_ATV = models.CharField('contrast_osd25_ATV', default='',max_length=10,blank=True)
    contrast_osd50_ATV = models.CharField('contrast_osd50_ATV', default='',max_length=10,blank=True)
    contrast_osd75_ATV = models.CharField('contrast_osd75_ATV', default='',max_length=10,blank=True)
    contrast_osd100_ATV = models.CharField('contrast_osd100_ATV', default='',max_length=10,blank=True)
    brightness_osd0_ATV = models.CharField('brightness_osd0_ATV', default='',max_length=10,blank=True)
    brightness_osd25_ATV = models.CharField('brightness_osd25_ATV', default='',max_length=10,blank=True)
    brightness_osd50_ATV = models.CharField('brightness_osd50_ATV', default='',max_length=10,blank=True)
    brightness_osd75_ATV = models.CharField('brightness_osd75_ATV', default='',max_length=10,blank=True)
    brightness_osd100_ATV = models.CharField('brightness_osd100_ATV', default='',max_length=10,blank=True)
    saturation_osd0_ATV = models.CharField('saturation_osd0_ATV', default='',max_length=10,blank=True)
    saturation_osd25_ATV = models.CharField('saturation_osd25_ATV', default='',max_length=10,blank=True)
    saturation_osd50_ATV = models.CharField('saturation_osd50_ATV', default='',max_length=10,blank=True)
    saturation_osd75_ATV = models.CharField('saturation_osd75_ATV', default='',max_length=10,blank=True)
    saturation_osd100_ATV = models.CharField('saturation_osd100_ATV', default='',max_length=10,blank=True)
    sharpness_osd0_ATV = models.CharField('sharpness_osd0_ATV', default='',max_length=10,blank=True)
    sharpness_osd25_ATV = models.CharField('sharpness_osd25_ATV', default='',max_length=10,blank=True)
    sharpness_osd50_ATV = models.CharField('sharpness_osd50_ATV', default='',max_length=10,blank=True)
    sharpness_osd75_ATV = models.CharField('sharpness_osd75_ATV', default='',max_length=10,blank=True)
    sharpness_osd100_ATV = models.CharField('sharpness_osd100_ATV', default='',max_length=10,blank=True)
    hue_osd0_ATV = models.CharField('hue_osd0_ATV', default='',max_length=10,blank=True)
    hue_osd25_ATV = models.CharField('hue_osd25_ATV', default='',max_length=10,blank=True)
    hue_osd50_ATV = models.CharField('hue_osd50_ATV', default='',max_length=10,blank=True)
    hue_osd75_ATV = models.CharField('hue_osd75_ATV', default='',max_length=10,blank=True)
    hue_osd100_ATV = models.CharField('hue_osd100_ATV', default='',max_length=10,blank=True)
    #AV
    cool_gainr_AV = models.CharField('cool_gainr_AV', default='',max_length=10,blank=True)
    normal_gainr_AV = models.CharField('normal_gainr_AV', default='',max_length=10,blank=True)
    warm_gainr_AV = models.CharField('warm_gainr_AV', default='',max_length=10,blank=True)
    cool_gaing_AV = models.CharField('cool_gaing_AV', default='',max_length=10,blank=True)
    normal_gaing_AV = models.CharField('normal_gaing_AV', default='',max_length=10,blank=True)
    warm_gaing_AV = models.CharField('warm_gaing_AV', default='',max_length=10,blank=True)
    cool_gainb_AV = models.CharField('cool_gainb_AV', default='',max_length=10,blank=True)
    normal_gainb_AV = models.CharField('normal_gainb_AV', default='',max_length=10,blank=True)
    warm_gainb_AV = models.CharField('warm_gainb_AV', default='',max_length=10,blank=True)
    cool_offsetr_AV = models.CharField('cool_offsetr_AV', default='',max_length=10,blank=True)
    normal_offsetr_AV = models.CharField('normal_offsetr_AV', default='',max_length=10,blank=True)
    warm_offsetr_AV = models.CharField('warm_offsetr_AV', default='',max_length=10,blank=True)
    cool_offsetg_AV = models.CharField('cool_offsetg_AV', default='',max_length=10,blank=True)
    normal_offsetg_AV = models.CharField('normal_offsetg_AV', default='',max_length=10,blank=True)
    warm_offsetg_AV = models.CharField('warm_offsetg_AV', default='',max_length=10,blank=True)
    cool_offsetb_AV = models.CharField('cool_offsetb_AV', default='',max_length=10,blank=True)
    normal_offsetb_AV = models.CharField('normal_offsetb_AV', default='',max_length=10,blank=True)
    warm_offsetb_AV = models.CharField('warm_offsetb_AV', default='',max_length=10,blank=True)
    contrast_osd0_AV = models.CharField('contrast_osd0_AV', default='',max_length=10,blank=True)
    contrast_osd25_AV = models.CharField('contrast_osd25_AV', default='',max_length=10,blank=True)
    contrast_osd50_AV = models.CharField('contrast_osd50_AV', default='',max_length=10,blank=True)
    contrast_osd75_AV = models.CharField('contrast_osd75_AV', default='',max_length=10,blank=True)
    contrast_osd100_AV = models.CharField('contrast_osd100_AV', default='',max_length=10,blank=True)
    brightness_osd0_AV = models.CharField('brightness_osd0_AV', default='',max_length=10,blank=True)
    brightness_osd25_AV = models.CharField('brightness_osd25_AV', default='',max_length=10,blank=True)
    brightness_osd50_AV = models.CharField('brightness_osd50_AV', default='',max_length=10,blank=True)
    brightness_osd75_AV = models.CharField('brightness_osd75_AV', default='',max_length=10,blank=True)
    brightness_osd100_AV = models.CharField('brightness_osd100_AV', default='',max_length=10,blank=True)
    saturation_osd0_AV = models.CharField('saturation_osd0_AV', default='',max_length=10,blank=True)
    saturation_osd25_AV = models.CharField('saturation_osd25_AV', default='',max_length=10,blank=True)
    saturation_osd50_AV = models.CharField('saturation_osd50_AV', default='',max_length=10,blank=True)
    saturation_osd75_AV = models.CharField('saturation_osd75_AV', default='',max_length=10,blank=True)
    saturation_osd100_AV = models.CharField('saturation_osd100_AV', default='',max_length=10,blank=True)
    sharpness_osd0_AV = models.CharField('sharpness_osd0_AV', default='',max_length=10,blank=True)
    sharpness_osd25_AV = models.CharField('sharpness_osd25_AV', default='',max_length=10,blank=True)
    sharpness_osd50_AV = models.CharField('sharpness_osd50_AV', default='',max_length=10,blank=True)
    sharpness_osd75_AV = models.CharField('sharpness_osd75_AV', default='',max_length=10,blank=True)
    sharpness_osd100_AV = models.CharField('sharpness_osd100_AV', default='',max_length=10,blank=True)
    hue_osd0_AV = models.CharField('hue_osd0_AV', default='',max_length=10,blank=True)
    hue_osd25_AV = models.CharField('hue_osd25_AV', default='',max_length=10,blank=True)
    hue_osd50_AV = models.CharField('hue_osd50_AV', default='',max_length=10,blank=True)
    hue_osd75_AV = models.CharField('hue_osd75_AV', default='',max_length=10,blank=True)
    hue_osd100_AV = models.CharField('hue_osd100_AV', default='',max_length=10,blank=True)
    #YPBPR
    cool_gainr_YPBPR = models.CharField('cool_gainr_YPBPR', default='',max_length=10,blank=True)
    normal_gainr_YPBPR = models.CharField('normal_gainr_YPBPR', default='',max_length=10,blank=True)
    warm_gainr_YPBPR = models.CharField('warm_gainr_YPBPR', default='',max_length=10,blank=True)
    cool_gaing_YPBPR = models.CharField('cool_gaing_YPBPR', default='',max_length=10,blank=True)
    normal_gaing_YPBPR = models.CharField('normal_gaing_YPBPR', default='',max_length=10,blank=True)
    warm_gaing_YPBPR = models.CharField('warm_gaing_YPBPR', default='',max_length=10,blank=True)
    cool_gainb_YPBPR = models.CharField('cool_gainb_YPBPR', default='',max_length=10,blank=True)
    normal_gainb_YPBPR = models.CharField('normal_gainb_YPBPR', default='',max_length=10,blank=True)
    warm_gainb_YPBPR = models.CharField('warm_gainb_YPBPR', default='',max_length=10,blank=True)
    cool_offsetr_YPBPR = models.CharField('cool_offsetr_YPBPR', default='',max_length=10,blank=True)
    normal_offsetr_YPBPR = models.CharField('normal_offsetr_YPBPR', default='',max_length=10,blank=True)
    warm_offsetr_YPBPR = models.CharField('warm_offsetr_YPBPR', default='',max_length=10,blank=True)
    cool_offsetg_YPBPR = models.CharField('cool_offsetg_YPBPR', default='',max_length=10,blank=True)
    normal_offsetg_YPBPR = models.CharField('normal_offsetg_YPBPR', default='',max_length=10,blank=True)
    warm_offsetg_YPBPR = models.CharField('warm_offsetg_YPBPR', default='',max_length=10,blank=True)
    cool_offsetb_YPBPR = models.CharField('cool_offsetb_YPBPR', default='',max_length=10,blank=True)
    normal_offsetb_YPBPR = models.CharField('normal_offsetb_YPBPR', default='',max_length=10,blank=True)
    warm_offsetb_YPBPR = models.CharField('warm_offsetb_YPBPR', default='',max_length=10,blank=True)
    contrast_osd0_YPBPR = models.CharField('contrast_osd0_YPBPR', default='',max_length=10,blank=True)
    contrast_osd25_YPBPR = models.CharField('contrast_osd25_YPBPR', default='',max_length=10,blank=True)
    contrast_osd50_YPBPR = models.CharField('contrast_osd50_YPBPR', default='',max_length=10,blank=True)
    contrast_osd75_YPBPR = models.CharField('contrast_osd75_YPBPR', default='',max_length=10,blank=True)
    contrast_osd100_YPBPR = models.CharField('contrast_osd100_YPBPR', default='',max_length=10,blank=True)
    brightness_osd0_YPBPR = models.CharField('brightness_osd0_YPBPR', default='',max_length=10,blank=True)
    brightness_osd25_YPBPR = models.CharField('brightness_osd25_YPBPR', default='',max_length=10,blank=True)
    brightness_osd50_YPBPR = models.CharField('brightness_osd50_YPBPR', default='',max_length=10,blank=True)
    brightness_osd75_YPBPR = models.CharField('brightness_osd75_YPBPR', default='',max_length=10,blank=True)
    brightness_osd100_YPBPR = models.CharField('brightness_osd100_YPBPR', default='',max_length=10,blank=True)
    saturation_osd0_YPBPR = models.CharField('saturation_osd0_YPBPR', default='',max_length=10,blank=True)
    saturation_osd25_YPBPR = models.CharField('saturation_osd25_YPBPR', default='',max_length=10,blank=True)
    saturation_osd50_YPBPR = models.CharField('saturation_osd50_YPBPR', default='',max_length=10,blank=True)
    saturation_osd75_YPBPR = models.CharField('saturation_osd75_YPBPR', default='',max_length=10,blank=True)
    saturation_osd100_YPBPR = models.CharField('saturation_osd100_YPBPR', default='',max_length=10,blank=True)
    sharpness_osd0_YPBPR = models.CharField('sharpness_osd0_YPBPR', default='',max_length=10,blank=True)
    sharpness_osd25_YPBPR = models.CharField('sharpness_osd25_YPBPR', default='',max_length=10,blank=True)
    sharpness_osd50_YPBPR = models.CharField('sharpness_osd50_YPBPR', default='',max_length=10,blank=True)
    sharpness_osd75_YPBPR = models.CharField('sharpness_osd75_YPBPR', default='',max_length=10,blank=True)
    sharpness_osd100_YPBPR = models.CharField('sharpness_osd100_YPBPR', default='',max_length=10,blank=True)
    hue_osd0_YPBPR = models.CharField('hue_osd0_YPBPR', default='',max_length=10,blank=True)
    hue_osd25_YPBPR = models.CharField('hue_osd25_YPBPR', default='',max_length=10,blank=True)
    hue_osd50_YPBPR = models.CharField('hue_osd50_YPBPR', default='',max_length=10,blank=True)
    hue_osd75_YPBPR = models.CharField('hue_osd75_YPBPR', default='',max_length=10,blank=True)
    hue_osd100_YPBPR = models.CharField('hue_osd100_YPBPR', default='',max_length=10,blank=True)
    #HDMI
    cool_gainr_HDMI = models.CharField('cool_gainr_HDMI', default='',max_length=10,blank=True)
    normal_gainr_HDMI = models.CharField('normal_gainr_HDMI', default='',max_length=10,blank=True)
    warm_gainr_HDMI = models.CharField('warm_gainr_HDMI', default='',max_length=10,blank=True)
    cool_gaing_HDMI = models.CharField('cool_gaing_HDMI', default='',max_length=10,blank=True)
    normal_gaing_HDMI = models.CharField('normal_gaing_HDMI', default='',max_length=10,blank=True)
    warm_gaing_HDMI = models.CharField('warm_gaing_HDMI', default='',max_length=10,blank=True)
    cool_gainb_HDMI = models.CharField('cool_gainb_HDMI', default='',max_length=10,blank=True)
    normal_gainb_HDMI = models.CharField('normal_gainb_HDMI', default='',max_length=10,blank=True)
    warm_gainb_HDMI = models.CharField('warm_gainb_HDMI', default='',max_length=10,blank=True)
    cool_offsetr_HDMI = models.CharField('cool_offsetr_HDMI', default='',max_length=10,blank=True)
    normal_offsetr_HDMI = models.CharField('normal_offsetr_HDMI', default='',max_length=10,blank=True)
    warm_offsetr_HDMI = models.CharField('warm_offsetr_HDMI', default='',max_length=10,blank=True)
    cool_offsetg_HDMI = models.CharField('cool_offsetg_HDMI', default='',max_length=10,blank=True)
    normal_offsetg_HDMI = models.CharField('normal_offsetg_HDMI', default='',max_length=10,blank=True)
    warm_offsetg_HDMI = models.CharField('warm_offsetg_HDMI', default='',max_length=10,blank=True)
    cool_offsetb_HDMI = models.CharField('cool_offsetb_HDMI', default='',max_length=10,blank=True)
    normal_offsetb_HDMI = models.CharField('normal_offsetb_HDMI', default='',max_length=10,blank=True)
    warm_offsetb_HDMI = models.CharField('warm_offsetb_HDMI', default='',max_length=10,blank=True)
    contrast_osd0_HDMI = models.CharField('contrast_osd0_HDMI', default='',max_length=10,blank=True)
    contrast_osd25_HDMI = models.CharField('contrast_osd25_HDMI', default='',max_length=10,blank=True)
    contrast_osd50_HDMI = models.CharField('contrast_osd50_HDMI', default='',max_length=10,blank=True)
    contrast_osd75_HDMI = models.CharField('contrast_osd75_HDMI', default='',max_length=10,blank=True)
    contrast_osd100_HDMI = models.CharField('contrast_osd100_HDMI', default='',max_length=10,blank=True)
    brightness_osd0_HDMI = models.CharField('brightness_osd0_HDMI', default='',max_length=10,blank=True)
    brightness_osd25_HDMI = models.CharField('brightness_osd25_HDMI', default='',max_length=10,blank=True)
    brightness_osd50_HDMI = models.CharField('brightness_osd50_HDMI', default='',max_length=10,blank=True)
    brightness_osd75_HDMI = models.CharField('brightness_osd75_HDMI', default='',max_length=10,blank=True)
    brightness_osd100_HDMI = models.CharField('brightness_osd100_HDMI', default='',max_length=10,blank=True)
    saturation_osd0_HDMI = models.CharField('saturation_osd0_HDMI', default='',max_length=10,blank=True)
    saturation_osd25_HDMI = models.CharField('saturation_osd25_HDMI', default='',max_length=10,blank=True)
    saturation_osd50_HDMI = models.CharField('saturation_osd50_HDMI', default='',max_length=10,blank=True)
    saturation_osd75_HDMI = models.CharField('saturation_osd75_HDMI', default='',max_length=10,blank=True)
    saturation_osd100_HDMI = models.CharField('saturation_osd100_HDMI', default='',max_length=10,blank=True)
    sharpness_osd0_HDMI = models.CharField('sharpness_osd0_HDMI', default='',max_length=10,blank=True)
    sharpness_osd25_HDMI = models.CharField('sharpness_osd25_HDMI', default='',max_length=10,blank=True)
    sharpness_osd50_HDMI = models.CharField('sharpness_osd50_HDMI', default='',max_length=10,blank=True)
    sharpness_osd75_HDMI = models.CharField('sharpness_osd75_HDMI', default='',max_length=10,blank=True)
    sharpness_osd100_HDMI = models.CharField('sharpness_osd100_HDMI', default='',max_length=10,blank=True)
    hue_osd0_HDMI = models.CharField('hue_osd0_HDMI', default='',max_length=10,blank=True)
    hue_osd25_HDMI = models.CharField('hue_osd25_HDMI', default='',max_length=10,blank=True)
    hue_osd50_HDMI = models.CharField('hue_osd50_HDMI', default='',max_length=10,blank=True)
    hue_osd75_HDMI = models.CharField('hue_osd75_HDMI', default='',max_length=10,blank=True)
    hue_osd100_HDMI = models.CharField('hue_osd100_HDMI', default='',max_length=10,blank=True)
    #DTV
    cool_gainr_DTV = models.CharField('cool_gainr_DTV', default='',max_length=10,blank=True)
    normal_gainr_DTV = models.CharField('normal_gainr_DTV', default='',max_length=10,blank=True)
    warm_gainr_DTV = models.CharField('warm_gainr_DTV', default='',max_length=10,blank=True)
    cool_gaing_DTV = models.CharField('cool_gaing_DTV', default='',max_length=10,blank=True)
    normal_gaing_DTV = models.CharField('normal_gaing_DTV', default='',max_length=10,blank=True)
    warm_gaing_DTV = models.CharField('warm_gaing_DTV', default='',max_length=10,blank=True)
    cool_gainb_DTV = models.CharField('cool_gainb_DTV', default='',max_length=10,blank=True)
    normal_gainb_DTV = models.CharField('normal_gainb_DTV', default='',max_length=10,blank=True)
    warm_gainb_DTV = models.CharField('warm_gainb_DTV', default='',max_length=10,blank=True)
    cool_offsetr_DTV = models.CharField('cool_offsetr_DTV', default='',max_length=10,blank=True)
    normal_offsetr_DTV = models.CharField('normal_offsetr_DTV', default='',max_length=10,blank=True)
    warm_offsetr_DTV = models.CharField('warm_offsetr_DTV', default='',max_length=10,blank=True)
    cool_offsetg_DTV = models.CharField('cool_offsetg_DTV', default='',max_length=10,blank=True)
    normal_offsetg_DTV = models.CharField('normal_offsetg_DTV', default='',max_length=10,blank=True)
    warm_offsetg_DTV = models.CharField('warm_offsetg_DTV', default='',max_length=10,blank=True)
    cool_offsetb_DTV = models.CharField('cool_offsetb_DTV', default='',max_length=10,blank=True)
    normal_offsetb_DTV = models.CharField('normal_offsetb_DTV', default='',max_length=10,blank=True)
    warm_offsetb_DTV = models.CharField('warm_offsetb_DTV', default='',max_length=10,blank=True)
    contrast_osd0_DTV = models.CharField('contrast_osd0_DTV', default='',max_length=10,blank=True)
    contrast_osd25_DTV = models.CharField('contrast_osd25_DTV', default='',max_length=10,blank=True)
    contrast_osd50_DTV = models.CharField('contrast_osd50_DTV', default='',max_length=10,blank=True)
    contrast_osd75_DTV = models.CharField('contrast_osd75_DTV', default='',max_length=10,blank=True)
    contrast_osd100_DTV = models.CharField('contrast_osd100_DTV', default='',max_length=10,blank=True)
    brightness_osd0_DTV = models.CharField('brightness_osd0_DTV', default='',max_length=10,blank=True)
    brightness_osd25_DTV = models.CharField('brightness_osd25_DTV', default='',max_length=10,blank=True)
    brightness_osd50_DTV = models.CharField('brightness_osd50_DTV', default='',max_length=10,blank=True)
    brightness_osd75_DTV = models.CharField('brightness_osd75_DTV', default='',max_length=10,blank=True)
    brightness_osd100_DTV = models.CharField('brightness_osd100_DTV', default='',max_length=10,blank=True)
    saturation_osd0_DTV = models.CharField('saturation_osd0_DTV', default='',max_length=10,blank=True)
    saturation_osd25_DTV = models.CharField('saturation_osd25_DTV', default='',max_length=10,blank=True)
    saturation_osd50_DTV = models.CharField('saturation_osd50_DTV', default='',max_length=10,blank=True)
    saturation_osd75_DTV = models.CharField('saturation_osd75_DTV', default='',max_length=10,blank=True)
    saturation_osd100_DTV = models.CharField('saturation_osd100_DTV', default='',max_length=10,blank=True)
    sharpness_osd0_DTV = models.CharField('sharpness_osd0_DTV', default='',max_length=10,blank=True)
    sharpness_osd25_DTV = models.CharField('sharpness_osd25_DTV', default='',max_length=10,blank=True)
    sharpness_osd50_DTV = models.CharField('sharpness_osd50_DTV', default='',max_length=10,blank=True)
    sharpness_osd75_DTV = models.CharField('sharpness_osd75_DTV', default='',max_length=10,blank=True)
    sharpness_osd100_DTV = models.CharField('sharpness_osd100_DTV', default='',max_length=10,blank=True)
    hue_osd0_DTV = models.CharField('hue_osd0_DTV', default='',max_length=10,blank=True)
    hue_osd25_DTV = models.CharField('hue_osd25_DTV', default='',max_length=10,blank=True)
    hue_osd50_DTV = models.CharField('hue_osd50_DTV', default='',max_length=10,blank=True)
    hue_osd75_DTV = models.CharField('hue_osd75_DTV', default='',max_length=10,blank=True)
    hue_osd100_DTV = models.CharField('hue_osd100_DTV', default='',max_length=10,blank=True)
    #DMP
    cool_gainr_DMP = models.CharField('cool_gainr_DMP', default='',max_length=10,blank=True)
    normal_gainr_DMP = models.CharField('normal_gainr_DMP', default='',max_length=10,blank=True)
    warm_gainr_DMP = models.CharField('warm_gainr_DMP', default='',max_length=10,blank=True)
    cool_gaing_DMP = models.CharField('cool_gaing_DMP', default='',max_length=10,blank=True)
    normal_gaing_DMP = models.CharField('normal_gaing_DMP', default='',max_length=10,blank=True)
    warm_gaing_DMP = models.CharField('warm_gaing_DMP', default='',max_length=10,blank=True)
    cool_gainb_DMP = models.CharField('cool_gainb_DMP', default='',max_length=10,blank=True)
    normal_gainb_DMP = models.CharField('normal_gainb_DMP', default='',max_length=10,blank=True)
    warm_gainb_DMP = models.CharField('warm_gainb_DMP', default='',max_length=10,blank=True)
    cool_offsetr_DMP = models.CharField('cool_offsetr_DMP', default='',max_length=10,blank=True)
    normal_offsetr_DMP = models.CharField('normal_offsetr_DMP', default='',max_length=10,blank=True)
    warm_offsetr_DMP = models.CharField('warm_offsetr_DMP', default='',max_length=10,blank=True)
    cool_offsetg_DMP = models.CharField('cool_offsetg_DMP', default='',max_length=10,blank=True)
    normal_offsetg_DMP = models.CharField('normal_offsetg_DMP', default='',max_length=10,blank=True)
    warm_offsetg_DMP = models.CharField('warm_offsetg_DMP', default='',max_length=10,blank=True)
    cool_offsetb_DMP = models.CharField('cool_offsetb_DMP', default='',max_length=10,blank=True)
    normal_offsetb_DMP = models.CharField('normal_offsetb_DMP', default='',max_length=10,blank=True)
    warm_offsetb_DMP = models.CharField('warm_offsetb_DMP', default='',max_length=10,blank=True)
    contrast_osd0_DMP = models.CharField('contrast_osd0_DMP', default='',max_length=10,blank=True)
    contrast_osd25_DMP = models.CharField('contrast_osd25_DMP', default='',max_length=10,blank=True)
    contrast_osd50_DMP = models.CharField('contrast_osd50_DMP', default='',max_length=10,blank=True)
    contrast_osd75_DMP = models.CharField('contrast_osd75_DMP', default='',max_length=10,blank=True)
    contrast_osd100_DMP = models.CharField('contrast_osd100_DMP', default='',max_length=10,blank=True)
    brightness_osd0_DMP = models.CharField('brightness_osd0_DMP', default='',max_length=10,blank=True)
    brightness_osd25_DMP = models.CharField('brightness_osd25_DMP', default='',max_length=10,blank=True)
    brightness_osd50_DMP = models.CharField('brightness_osd50_DMP', default='',max_length=10,blank=True)
    brightness_osd75_DMP = models.CharField('brightness_osd75_DMP', default='',max_length=10,blank=True)
    brightness_osd100_DMP = models.CharField('brightness_osd100_DMP', default='',max_length=10,blank=True)
    saturation_osd0_DMP = models.CharField('saturation_osd0_DMP', default='',max_length=10,blank=True)
    saturation_osd25_DMP = models.CharField('saturation_osd25_DMP', default='',max_length=10,blank=True)
    saturation_osd50_DMP = models.CharField('saturation_osd50_DMP', default='',max_length=10,blank=True)
    saturation_osd75_DMP = models.CharField('saturation_osd75_DMP', default='',max_length=10,blank=True)
    saturation_osd100_DMP = models.CharField('saturation_osd100_DMP', default='',max_length=10,blank=True)
    sharpness_osd0_DMP = models.CharField('sharpness_osd0_DMP', default='',max_length=10,blank=True)
    sharpness_osd25_DMP = models.CharField('sharpness_osd25_DMP', default='',max_length=10,blank=True)
    sharpness_osd50_DMP = models.CharField('sharpness_osd50_DMP', default='',max_length=10,blank=True)
    sharpness_osd75_DMP = models.CharField('sharpness_osd75_DMP', default='',max_length=10,blank=True)
    sharpness_osd100_DMP = models.CharField('sharpness_osd100_DMP', default='',max_length=10,blank=True)
    hue_osd0_DMP = models.CharField('hue_osd0_DMP', default='',max_length=10,blank=True)
    hue_osd25_DMP = models.CharField('hue_osd25_DMP', default='',max_length=10,blank=True)
    hue_osd50_DMP = models.CharField('hue_osd50_DMP', default='',max_length=10,blank=True)
    hue_osd75_DMP = models.CharField('hue_osd75_DMP', default='',max_length=10,blank=True)
    hue_osd100_DMP = models.CharField('hue_osd100_DMP', default='',max_length=10,blank=True)
    #DVD
    cool_gainr_DVD = models.CharField('cool_gainr_DVD', default='',max_length=10,blank=True)
    normal_gainr_DVD = models.CharField('normal_gainr_DVD', default='',max_length=10,blank=True)
    warm_gainr_DVD = models.CharField('warm_gainr_DVD', default='',max_length=10,blank=True)
    cool_gaing_DVD = models.CharField('cool_gaing_DVD', default='',max_length=10,blank=True)
    normal_gaing_DVD = models.CharField('normal_gaing_DVD', default='',max_length=10,blank=True)
    warm_gaing_DVD = models.CharField('warm_gaing_DVD', default='',max_length=10,blank=True)
    cool_gainb_DVD = models.CharField('cool_gainb_DVD', default='',max_length=10,blank=True)
    normal_gainb_DVD = models.CharField('normal_gainb_DVD', default='',max_length=10,blank=True)
    warm_gainb_DVD = models.CharField('warm_gainb_DVD', default='',max_length=10,blank=True)
    cool_offsetr_DVD = models.CharField('cool_offsetr_DVD', default='',max_length=10,blank=True)
    normal_offsetr_DVD = models.CharField('normal_offsetr_DVD', default='',max_length=10,blank=True)
    warm_offsetr_DVD = models.CharField('warm_offsetr_DVD', default='',max_length=10,blank=True)
    cool_offsetg_DVD = models.CharField('cool_offsetg_DVD', default='',max_length=10,blank=True)
    normal_offsetg_DVD = models.CharField('normal_offsetg_DVD', default='',max_length=10,blank=True)
    warm_offsetg_DVD = models.CharField('warm_offsetg_DVD', default='',max_length=10,blank=True)
    cool_offsetb_DVD = models.CharField('cool_offsetb_DVD', default='',max_length=10,blank=True)
    normal_offsetb_DVD = models.CharField('normal_offsetb_DVD', default='',max_length=10,blank=True)
    warm_offsetb_DVD = models.CharField('warm_offsetb_DVD', default='',max_length=10,blank=True)
    contrast_osd0_DVD = models.CharField('contrast_osd0_DVD', default='',max_length=10,blank=True)
    contrast_osd25_DVD = models.CharField('contrast_osd25_DVD', default='',max_length=10,blank=True)
    contrast_osd50_DVD = models.CharField('contrast_osd50_DVD', default='',max_length=10,blank=True)
    contrast_osd75_DVD = models.CharField('contrast_osd75_DVD', default='',max_length=10,blank=True)
    contrast_osd100_DVD = models.CharField('contrast_osd100_DVD', default='',max_length=10,blank=True)
    brightness_osd0_DVD = models.CharField('brightness_osd0_DVD', default='',max_length=10,blank=True)
    brightness_osd25_DVD = models.CharField('brightness_osd25_DVD', default='',max_length=10,blank=True)
    brightness_osd50_DVD = models.CharField('brightness_osd50_DVD', default='',max_length=10,blank=True)
    brightness_osd75_DVD = models.CharField('brightness_osd75_DVD', default='',max_length=10,blank=True)
    brightness_osd100_DVD = models.CharField('brightness_osd100_DVD', default='',max_length=10,blank=True)
    saturation_osd0_DVD = models.CharField('saturation_osd0_DVD', default='',max_length=10,blank=True)
    saturation_osd25_DVD = models.CharField('saturation_osd25_DVD', default='',max_length=10,blank=True)
    saturation_osd50_DVD = models.CharField('saturation_osd50_DVD', default='',max_length=10,blank=True)
    saturation_osd75_DVD = models.CharField('saturation_osd75_DVD', default='',max_length=10,blank=True)
    saturation_osd100_DVD = models.CharField('saturation_osd100_DVD', default='',max_length=10,blank=True)
    sharpness_osd0_DVD = models.CharField('sharpness_osd0_DVD', default='',max_length=10,blank=True)
    sharpness_osd25_DVD = models.CharField('sharpness_osd25_DVD', default='',max_length=10,blank=True)
    sharpness_osd50_DVD = models.CharField('sharpness_osd50_DVD', default='',max_length=10,blank=True)
    sharpness_osd75_DVD = models.CharField('sharpness_osd75_DVD', default='',max_length=10,blank=True)
    sharpness_osd100_DVD = models.CharField('sharpness_osd100_DVD', default='',max_length=10,blank=True)
    hue_osd0_DVD = models.CharField('hue_osd0_DVD', default='',max_length=10,blank=True)
    hue_osd25_DVD = models.CharField('hue_osd25_DVD', default='',max_length=10,blank=True)
    hue_osd50_DVD = models.CharField('hue_osd50_DVD', default='',max_length=10,blank=True)
    hue_osd75_DVD = models.CharField('hue_osd75_DVD', default='',max_length=10,blank=True)
    hue_osd100_DVD = models.CharField('hue_osd100_DVD', default='',max_length=10,blank=True)
    #SCART
    cool_gainr_SCART = models.CharField('cool_gainr_SCART', default='',max_length=10,blank=True)
    normal_gainr_SCART = models.CharField('normal_gainr_SCART', default='',max_length=10,blank=True)
    warm_gainr_SCART = models.CharField('warm_gainr_SCART', default='',max_length=10,blank=True)
    cool_gaing_SCART = models.CharField('cool_gaing_SCART', default='',max_length=10,blank=True)
    normal_gaing_SCART = models.CharField('normal_gaing_SCART', default='',max_length=10,blank=True)
    warm_gaing_SCART = models.CharField('warm_gaing_SCART', default='',max_length=10,blank=True)
    cool_gainb_SCART = models.CharField('cool_gainb_SCART', default='',max_length=10,blank=True)
    normal_gainb_SCART = models.CharField('normal_gainb_SCART', default='',max_length=10,blank=True)
    warm_gainb_SCART = models.CharField('warm_gainb_SCART', default='',max_length=10,blank=True)
    cool_offsetr_SCART = models.CharField('cool_offsetr_SCART', default='',max_length=10,blank=True)
    normal_offsetr_SCART = models.CharField('normal_offsetr_SCART', default='',max_length=10,blank=True)
    warm_offsetr_SCART = models.CharField('warm_offsetr_SCART', default='',max_length=10,blank=True)
    cool_offsetg_SCART = models.CharField('cool_offsetg_SCART', default='',max_length=10,blank=True)
    normal_offsetg_SCART = models.CharField('normal_offsetg_SCART', default='',max_length=10,blank=True)
    warm_offsetg_SCART = models.CharField('warm_offsetg_SCART', default='',max_length=10,blank=True)
    cool_offsetb_SCART = models.CharField('cool_offsetb_SCART', default='',max_length=10,blank=True)
    normal_offsetb_SCART = models.CharField('normal_offsetb_SCART', default='',max_length=10,blank=True)
    warm_offsetb_SCART = models.CharField('warm_offsetb_SCART', default='',max_length=10,blank=True)
    contrast_osd0_SCART = models.CharField('contrast_osd0_SCART', default='',max_length=10,blank=True)
    contrast_osd25_SCART = models.CharField('contrast_osd25_SCART', default='',max_length=10,blank=True)
    contrast_osd50_SCART = models.CharField('contrast_osd50_SCART', default='',max_length=10,blank=True)
    contrast_osd75_SCART = models.CharField('contrast_osd75_SCART', default='',max_length=10,blank=True)
    contrast_osd100_SCART = models.CharField('contrast_osd100_SCART', default='',max_length=10,blank=True)
    brightness_osd0_SCART = models.CharField('brightness_osd0_SCART', default='',max_length=10,blank=True)
    brightness_osd25_SCART = models.CharField('brightness_osd25_SCART', default='',max_length=10,blank=True)
    brightness_osd50_SCART = models.CharField('brightness_osd50_SCART', default='',max_length=10,blank=True)
    brightness_osd75_SCART = models.CharField('brightness_osd75_SCART', default='',max_length=10,blank=True)
    brightness_osd100_SCART = models.CharField('brightness_osd100_SCART', default='',max_length=10,blank=True)
    saturation_osd0_SCART = models.CharField('saturation_osd0_SCART', default='',max_length=10,blank=True)
    saturation_osd25_SCART = models.CharField('saturation_osd25_SCART', default='',max_length=10,blank=True)
    saturation_osd50_SCART = models.CharField('saturation_osd50_SCART', default='',max_length=10,blank=True)
    saturation_osd75_SCART = models.CharField('saturation_osd75_SCART', default='',max_length=10,blank=True)
    saturation_osd100_SCART = models.CharField('saturation_osd100_SCART', default='',max_length=10,blank=True)
    sharpness_osd0_SCART = models.CharField('sharpness_osd0_SCART', default='',max_length=10,blank=True)
    sharpness_osd25_SCART = models.CharField('sharpness_osd25_SCART', default='',max_length=10,blank=True)
    sharpness_osd50_SCART = models.CharField('sharpness_osd50_SCART', default='',max_length=10,blank=True)
    sharpness_osd75_SCART = models.CharField('sharpness_osd75_SCART', default='',max_length=10,blank=True)
    sharpness_osd100_SCART = models.CharField('sharpness_osd100_SCART', default='',max_length=10,blank=True)
    hue_osd0_SCART = models.CharField('hue_osd0_SCART', default='',max_length=10,blank=True)
    hue_osd25_SCART = models.CharField('hue_osd25_SCART', default='',max_length=10,blank=True)
    hue_osd50_SCART = models.CharField('hue_osd50_SCART', default='',max_length=10,blank=True)
    hue_osd75_SCART = models.CharField('hue_osd75_SCART', default='',max_length=10,blank=True)
    hue_osd100_SCART = models.CharField('hue_osd100_SCART', default='',max_length=10,blank=True)
    #SVIDEO
    cool_gainr_SVIDEO = models.CharField('cool_gainr_SVIDEO', default='',max_length=10,blank=True)
    normal_gainr_SVIDEO = models.CharField('normal_gainr_SVIDEO', default='',max_length=10,blank=True)
    warm_gainr_SVIDEO = models.CharField('warm_gainr_SVIDEO', default='',max_length=10,blank=True)
    cool_gaing_SVIDEO = models.CharField('cool_gaing_SVIDEO', default='',max_length=10,blank=True)
    normal_gaing_SVIDEO = models.CharField('normal_gaing_SVIDEO', default='',max_length=10,blank=True)
    warm_gaing_SVIDEO = models.CharField('warm_gaing_SVIDEO', default='',max_length=10,blank=True)
    cool_gainb_SVIDEO = models.CharField('cool_gainb_SVIDEO', default='',max_length=10,blank=True)
    normal_gainb_SVIDEO = models.CharField('normal_gainb_SVIDEO', default='',max_length=10,blank=True)
    warm_gainb_SVIDEO = models.CharField('warm_gainb_SVIDEO', default='',max_length=10,blank=True)
    cool_offsetr_SVIDEO = models.CharField('cool_offsetr_SVIDEO', default='',max_length=10,blank=True)
    normal_offsetr_SVIDEO = models.CharField('normal_offsetr_SVIDEO', default='',max_length=10,blank=True)
    warm_offsetr_SVIDEO = models.CharField('warm_offsetr_SVIDEO', default='',max_length=10,blank=True)
    cool_offsetg_SVIDEO = models.CharField('cool_offsetg_SVIDEO', default='',max_length=10,blank=True)
    normal_offsetg_SVIDEO = models.CharField('normal_offsetg_SVIDEO', default='',max_length=10,blank=True)
    warm_offsetg_SVIDEO = models.CharField('warm_offsetg_SVIDEO', default='',max_length=10,blank=True)
    cool_offsetb_SVIDEO = models.CharField('cool_offsetb_SVIDEO', default='',max_length=10,blank=True)
    normal_offsetb_SVIDEO = models.CharField('normal_offsetb_SVIDEO', default='',max_length=10,blank=True)
    warm_offsetb_SVIDEO = models.CharField('warm_offsetb_SVIDEO', default='',max_length=10,blank=True)
    contrast_osd0_SVIDEO = models.CharField('contrast_osd0_SVIDEO', default='',max_length=10,blank=True)
    contrast_osd25_SVIDEO = models.CharField('contrast_osd25_SVIDEO', default='',max_length=10,blank=True)
    contrast_osd50_SVIDEO = models.CharField('contrast_osd50_SVIDEO', default='',max_length=10,blank=True)
    contrast_osd75_SVIDEO = models.CharField('contrast_osd75_SVIDEO', default='',max_length=10,blank=True)
    contrast_osd100_SVIDEO = models.CharField('contrast_osd100_SVIDEO', default='',max_length=10,blank=True)
    brightness_osd0_SVIDEO = models.CharField('brightness_osd0_SVIDEO', default='',max_length=10,blank=True)
    brightness_osd25_SVIDEO = models.CharField('brightness_osd25_SVIDEO', default='',max_length=10,blank=True)
    brightness_osd50_SVIDEO = models.CharField('brightness_osd50_SVIDEO', default='',max_length=10,blank=True)
    brightness_osd75_SVIDEO = models.CharField('brightness_osd75_SVIDEO', default='',max_length=10,blank=True)
    brightness_osd100_SVIDEO = models.CharField('brightness_osd100_SVIDEO', default='',max_length=10,blank=True)
    saturation_osd0_SVIDEO = models.CharField('saturation_osd0_SVIDEO', default='',max_length=10,blank=True)
    saturation_osd25_SVIDEO = models.CharField('saturation_osd25_SVIDEO', default='',max_length=10,blank=True)
    saturation_osd50_SVIDEO = models.CharField('saturation_osd50_SVIDEO', default='',max_length=10,blank=True)
    saturation_osd75_SVIDEO = models.CharField('saturation_osd75_SVIDEO', default='',max_length=10,blank=True)
    saturation_osd100_SVIDEO = models.CharField('saturation_osd100_SVIDEO', default='',max_length=10,blank=True)
    sharpness_osd0_SVIDEO = models.CharField('sharpness_osd0_SVIDEO', default='',max_length=10,blank=True)
    sharpness_osd25_SVIDEO = models.CharField('sharpness_osd25_SVIDEO', default='',max_length=10,blank=True)
    sharpness_osd50_SVIDEO = models.CharField('sharpness_osd50_SVIDEO', default='',max_length=10,blank=True)
    sharpness_osd75_SVIDEO = models.CharField('sharpness_osd75_SVIDEO', default='',max_length=10,blank=True)
    sharpness_osd100_SVIDEO = models.CharField('sharpness_osd100_SVIDEO', default='',max_length=10,blank=True)
    hue_osd0_SVIDEO = models.CharField('hue_osd0_SVIDEO', default='',max_length=10,blank=True)
    hue_osd25_SVIDEO = models.CharField('hue_osd25_SVIDEO', default='',max_length=10,blank=True)
    hue_osd50_SVIDEO = models.CharField('hue_osd50_SVIDEO', default='',max_length=10,blank=True)
    hue_osd75_SVIDEO = models.CharField('hue_osd75_SVIDEO', default='',max_length=10,blank=True)
    hue_osd100_SVIDEO = models.CharField('hue_osd100_SVIDEO', default='',max_length=10,blank=True)
    #QMAPAEWRITE
    icc_r = models.CharField('icc_r', default='',max_length=10,blank=True)
    ibc_r = models.CharField('ibc_r', default='',max_length=10,blank=True)
    ihc_r = models.CharField('ihc_r', default='',max_length=10,blank=True)
    icc_g = models.CharField('icc_g', default='',max_length=10,blank=True)
    ibc_g = models.CharField('ibc_g', default='',max_length=10,blank=True)
    ihc_g = models.CharField('ihc_g', default='',max_length=10,blank=True)
    icc_b = models.CharField('icc_b', default='',max_length=10,blank=True)
    ibc_b = models.CharField('ibc_b', default='',max_length=10,blank=True)
    ihc_b = models.CharField('ihc_b', default='',max_length=10,blank=True)
    icc_c = models.CharField('icc_c', default='',max_length=10,blank=True)
    ibc_c = models.CharField('ibc_c', default='',max_length=10,blank=True)
    ihc_c = models.CharField('ihc_c', default='',max_length=10,blank=True)
    icc_m = models.CharField('icc_m', default='',max_length=10,blank=True)
    ibc_m = models.CharField('ibc_m', default='',max_length=10,blank=True)
    ihc_m = models.CharField('ihc_m', default='',max_length=10,blank=True)
    icc_y = models.CharField('icc_y', default='',max_length=10,blank=True)
    ibc_y = models.CharField('ibc_y', default='',max_length=10,blank=True)
    ihc_y = models.CharField('ihc_y', default='',max_length=10,blank=True)
    icc_f = models.CharField('icc_f', default='',max_length=10,blank=True)
    ibc_f = models.CharField('ibc_f', default='',max_length=10,blank=True)
    ihc_f = models.CharField('ihc_f', default='',max_length=10,blank=True)

    def __unicode__(self):
        return self.pq_name 
    class Meta:
        verbose_name = 'PQ'
        verbose_name_plural = 'PQ配置'

class CollectProject(models.Model):
    uid = models.IntegerField('user_id')
    pro_id = models.ForeignKey(CloudProject)
    colAll = models.CharField('所有人常用',default='0',max_length=10,blank=True);
    
    def __unicode__(self):
        return str(self.id)
class CollectPanel(models.Model):
    uid = models.IntegerField('用户id')
    panel_id = models.ForeignKey(CloudPanel)
    colAll = models.CharField('所有人常用',default='0',max_length=10,blank=True);
    
    def __unicode__(self):
        return str(self.id)
class CollectKeypad(models.Model):
    uid = models.IntegerField('用户id')
    keypad_id = models.ForeignKey(CloudKeypad)
    colAll = models.CharField('所有人常用',default='0',max_length=10,blank=True);
    
    def __unicode__(self):
        return str(self.id)
class CollectIR(models.Model):
    uid = models.IntegerField('用户id')
    ir_id = models.ForeignKey(CloudIR)
    colAll = models.CharField('所有人常用',default='0',max_length=10,blank=True);
    
    def __unicode__(self):
        return str(self.id)
class CollectPQ(models.Model):
    uid = models.IntegerField('用户id')
    pq_id = models.ForeignKey(CloudPQ)
    colAll = models.CharField('所有人常用',default='0',max_length=10,blank=True);
    
    def __unicode__(self):
        return str(self.id)
class Collectlogo(models.Model):
    uid = models.IntegerField('用户id')
    logo_id = models.ForeignKey(logo)
    colAll = models.CharField('所有人常用',default='0',max_length=10,blank=True);

    def __unicode__(self):
        return str(self.id)
    class Meta:
        verbose_name = 'LOGO'
        verbose_name_plural = 'LOGO配置'

class CompileList(models.Model):
    pro_id = models.CharField('项目编号', default='',max_length=10,blank=True)
    pro_statu = models.CharField('项目状态', default='0',max_length=10,blank=True)

    def __unicode__(self):
            return str(self.pro_id)
    class Meta:
        verbose_name = '编译'
        verbose_name_plural = '编译列表' 